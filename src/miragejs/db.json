{
  "catalogs": [],
  "config": {
    "dell": "dell",
    "amqp": "amqp://localhost",
    "apiServerAddress": "172.22.4.227",
    "rackhdPublicIp": null,
    "apiServerPort": 9030,
    "dhcpGateway": "172.22.4.227",
    "dhcpProxyBindAddress": "172.22.4.227",
    "dhcpProxyBindPort": 4011,
    "dhcpSubnetMask": "255.255.252.0",
    "httpEndpoints": [
      {
        "address": "0.0.0.0",
        "port": 8080,
        "httpsEnabled": false,
        "proxiesEnabled": true,
        "authEnabled": false,
        "yamlName": ["monorail-2.0.yaml", "redfish.yaml"]
      },
      {
        "address": "0.0.0.0",
        "port": 8443,
        "httpsEnabled": true,
        "proxiesEnabled": true,
        "authEnabled": false,
        "yamlName": ["monorail-2.0.yaml", "redfish.yaml"]
      },
      {
        "address": "172.22.4.227",
        "port": 9988,
        "httpsEnabled": false,
        "proxiesEnabled": true,
        "authEnabled": false,
        "yamlName": ["monorail-2.0-sb.yaml"]
      }
    ],
    "taskGraphEndpoint": {
      "address": "172.22.4.227",
      "port": 9030
    },
    "fileServerAddress": "172.22.4.227",
    "fileServerPort": 8080,
    "fileServerPath": "/",
    "httpDocsRoot": "./build/apidoc",
    "httpFileServiceRoot": "./static/files",
    "httpFileServiceType": "FileSystem",
    "httpProxies": [
      {
        "localPath": "/coreos",
        "server": "http://stable.release.core-os.net",
        "remotePath": "/amd64-usr"
      }
    ],
    "httpStaticRoot": "/opt/monorail/static/http",
    "authUsername": "admin",
    "authPasswordHash": "KcBN9YobNV0wdux8h0fKNqi4uoKCgGl/j8c6YGlG7iA0PB3P9ojbmANGhDlcSBE0iOTIsYsGbtSsbqP4wvsVcw==",
    "authPasswordSalt": "zlxkgxjvcFwm0M8sWaGojh25qNYO8tuNWUMN4xKPH93PidwkCAvaX2JItLA3p7BSCWIzkw4GwWuezoMvKf3UXg==",
    "authTokenSecret": "RackHDRocks!",
    "authTokenExpireIn": 86400,
    "autoCreateObm": "false",
    "mongo": "mongodb://localhost/pxe",
    "sharedKey": "qxfO2D3tIJsZACu7UA6Fbw0avowo8r79ALzn+WeuC8M=",
    "statsd": "127.0.0.1:8125",
    "syslogBindAddress": "172.22.4.227",
    "syslogBindPort": 514,
    "tftpBindAddress": "172.22.4.227",
    "tftpBindPort": 69,
    "tftpRoot": "./static/tftp",
    "minLogLevel": 2,
    "arpCacheEnabled": true,
    "versioning": "null",
    "node_version": "6.17.1",
    "version": "2.60.7",
    "unstable_restarts": "0",
    "restart_time": "12",
    "created_at": "1570454534674",
    "axm_dynamic": "[object Object]",
    "axm_options": "[object Object]",
    "axm_monitor": "[object Object]",
    "axm_actions": "",
    "pm_uptime": "1570454534796",
    "status": "launching",
    "unique_id": "bfa32dc7-6091-4125-9539-31a9fbd6a130",
    "PM2_JSON_PROCESSING": "true",
    "PM2_INTERACTOR_PROCESSING": "true",
    "PM2_USAGE": "CLI",
    "PM2_HOME": "/home/ubuntu/.pm2",
    "PWD": "./src/on-http",
    "SUDO_USER": "ubuntu",
    "SHELL": "/bin/bash",
    "SUDO_COMMAND": "/bin/sh -c echo BECOME-SUCCESS-oknzgmlbzbjxoxevjsrdrjffbxvzigyp ; /usr/bin/python3",
    "LANG": "en_US.UTF-8",
    "PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin",
    "TERM": "unknown",
    "USERNAME": "root",
    "LOGNAME": "root",
    "SUDO_UID": "1000",
    "HOME": "/root",
    "USER": "root",
    "MAIL": "/var/mail/root",
    "SUDO_GID": "1000",
    "on-http": "{}",
    "NODE_APP_INSTANCE": "0",
    "vizion_running": "false",
    "km_link": "false",
    "pm_pid_path": "/home/ubuntu/.pm2/pids/on-http-1.pid",
    "pm_err_log_path": "/home/ubuntu/.pm2/logs/on-http-error.log",
    "pm_out_log_path": "/home/ubuntu/.pm2/logs/on-http-out.log",
    "exec_mode": "fork_mode",
    "exec_interpreter": "node",
    "pm_cwd": "/home/ubuntu/src/on-http",
    "pm_exec_path": "/home/ubuntu/src/on-http/index.js",
    "name": "on-http",
    "cwd": "./src/on-http",
    "node_args": "",
    "env": "[object Object]",
    "merge_logs": "true",
    "vizion": "true",
    "autorestart": "true",
    "instance_var": "NODE_APP_INSTANCE",
    "pmx": "true",
    "automation": "true",
    "treekill": "true",
    "username": "root",
    "windowsHide": "true",
    "kill_retry_time": "100",
    "pm_id": "1",
    "prev_restart_delay": "0",
    "exit_code": "1",
    "_": [],
    "$0": "/usr/lib/node_modules/pm2/lib/ProcessContainerFork.js",
    "baseDirectory": "/home/ubuntu/src/on-http/node_modules/on-core"
  },
  "files": [],
  "nodes": [
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b3d464588b5784bd4f950/catalogs",
      "id": "5d9b3d464588b5784bd4f950",
      "identifiers": [],
      "name": "Enclosure Node 0",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b3d464588b5784bd4f950/tags",
      "pollers": "/api/2.0/nodes/5d9b3d464588b5784bd4f950/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": [
            "5d9b45b74588b5784bd4f963",
            "5d9b45c14588b5784bd4f9ba",
            "5d9b5b424588b5784bd4fb85",
            "5d9b72654588b5784bd4fc5f",
            "5d9b94064588b5784bd4fd0b"
          ]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b3d464588b5784bd4f950/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b463a4588b5784bd4faa2/catalogs",
      "id": "5d9b463a4588b5784bd4faa2",
      "identifiers": [],
      "name": "Enclosure Node 819255615",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b463a4588b5784bd4faa2/tags",
      "pollers": "/api/2.0/nodes/5d9b463a4588b5784bd4faa2/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": ["5d9b45b74588b5784bd4f980"]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b463a4588b5784bd4faa2/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b45b74588b5784bd4f963/catalogs",
      "id": "5d9b45b74588b5784bd4f963",
      "identifiers": ["6c:92:bf:ce:0f:28"],
      "name": "6c:92:bf:ce:0f:28",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b463a4588b5784bd4fabf"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b45b74588b5784bd4f963/tags",
      "pollers": "/api/2.0/nodes/5d9b45b74588b5784bd4f963/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b3d464588b5784bd4f950"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b45b74588b5784bd4f963/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b45b74588b5784bd4f980/catalogs",
      "id": "5d9b45b74588b5784bd4f980",
      "identifiers": ["6c:92:bf:5f:ae:7e"],
      "name": "6c:92:bf:5f:ae:7e",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b463a4588b5784bd4fac0"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b45b74588b5784bd4f980/tags",
      "pollers": "/api/2.0/nodes/5d9b45b74588b5784bd4f980/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b463a4588b5784bd4faa2"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b45b74588b5784bd4f980/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba/catalogs",
      "id": "5d9b45c14588b5784bd4f9ba",
      "identifiers": ["6c:92:bf:ce:83:c8"],
      "name": "6c:92:bf:ce:83:c8",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b464e4588b5784bd4fad2"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba/tags",
      "pollers": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b3d464588b5784bd4f950"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b46b44588b5784bd4faf6/catalogs",
      "id": "5d9b46b44588b5784bd4faf6",
      "identifiers": [],
      "name": "Enclosure Node 819255618",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b46b44588b5784bd4faf6/tags",
      "pollers": "/api/2.0/nodes/5d9b46b44588b5784bd4faf6/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": ["5d9b45c34588b5784bd4f9d7"]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b46b44588b5784bd4faf6/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7/catalogs",
      "id": "5d9b45c34588b5784bd4f9d7",
      "identifiers": ["6c:92:bf:5c:a8:66"],
      "name": "6c:92:bf:5c:a8:66",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b46b44588b5784bd4fb02"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7/tags",
      "pollers": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b46b44588b5784bd4faf6"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b473a4588b5784bd4fb09/catalogs",
      "id": "5d9b473a4588b5784bd4fb09",
      "identifiers": [],
      "name": "Enclosure Node 218523255",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b473a4588b5784bd4fb09/tags",
      "pollers": "/api/2.0/nodes/5d9b473a4588b5784bd4fb09/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": ["5d9b45d24588b5784bd4f9f4"]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b473a4588b5784bd4fb09/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4/catalogs",
      "id": "5d9b45d24588b5784bd4f9f4",
      "identifiers": ["6c:92:bf:b2:2e:de"],
      "name": "6c:92:bf:b2:2e:de",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b473a4588b5784bd4fb15"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4/tags",
      "pollers": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b473a4588b5784bd4fb09"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b5c9d4588b5784bd4fbc6/catalogs",
      "id": "5d9b5c9d4588b5784bd4fbc6",
      "identifiers": [],
      "name": "Enclosure Node 819258759",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b5c9d4588b5784bd4fbc6/tags",
      "pollers": "/api/2.0/nodes/5d9b5c9d4588b5784bd4fbc6/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": ["5d9b5b344588b5784bd4fb68"]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b5c9d4588b5784bd4fbc6/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b72b64588b5784bd4fc7c/catalogs",
      "id": "5d9b72b64588b5784bd4fc7c",
      "identifiers": [],
      "name": "Enclosure Node 819255610",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b72b64588b5784bd4fc7c/tags",
      "pollers": "/api/2.0/nodes/5d9b72b64588b5784bd4fc7c/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": ["5d9b72294588b5784bd4fc25"]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b72b64588b5784bd4fc7c/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b72294588b5784bd4fc25/catalogs",
      "id": "5d9b72294588b5784bd4fc25",
      "identifiers": ["6c:92:bf:65:1e:1e"],
      "name": "6c:92:bf:65:1e:1e",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b72b64588b5784bd4fc88"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b72294588b5784bd4fc25/tags",
      "pollers": "/api/2.0/nodes/5d9b72294588b5784bd4fc25/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b72b64588b5784bd4fc7c"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b72294588b5784bd4fc25/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f/catalogs",
      "id": "5d9b72654588b5784bd4fc5f",
      "identifiers": ["6c:92:bf:ce:8b:24"],
      "name": "6c:92:bf:ce:8b:24",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b72fc4588b5784bd4fca0"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f/tags",
      "pollers": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b3d464588b5784bd4f950"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b7e054588b5784bd4fcf8/catalogs",
      "id": "5d9b7e054588b5784bd4fcf8",
      "identifiers": [],
      "name": "Enclosure Node 819254385",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b7e054588b5784bd4fcf8/tags",
      "pollers": "/api/2.0/nodes/5d9b7e054588b5784bd4fcf8/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": ["5d9b7d6e4588b5784bd4fcdb"]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b7e054588b5784bd4fcf8/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b/catalogs",
      "id": "5d9b94064588b5784bd4fd0b",
      "identifiers": ["6c:92:bf:5f:ae:06"],
      "name": "6c:92:bf:5f:ae:06",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b94894588b5784bd4fd33"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b/tags",
      "pollers": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b3d464588b5784bd4f950"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b9b674588b5784bd4fd69/catalogs",
      "id": "5d9b9b674588b5784bd4fd69",
      "identifiers": [],
      "name": "Enclosure Node 819255624",
      "obms": [],
      "tags": "/api/2.0/nodes/5d9b9b674588b5784bd4fd69/tags",
      "pollers": "/api/2.0/nodes/5d9b9b674588b5784bd4fd69/pollers",
      "relations": [
        {
          "relationType": "encloses",
          "info": null,
          "targets": ["5d9b9a084588b5784bd4fd4c"]
        }
      ],
      "type": "enclosure",
      "workflows": "/api/2.0/nodes/5d9b9b674588b5784bd4fd69/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85/catalogs",
      "id": "5d9b5b424588b5784bd4fb85",
      "identifiers": ["6c:92:bf:ce:8c:44"],
      "name": "6c:92:bf:ce:8c:44",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b5bcf4588b5784bd4fbc5"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85/tags",
      "pollers": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b3d464588b5784bd4f950"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68/catalogs",
      "id": "5d9b5b344588b5784bd4fb68",
      "identifiers": ["6c:92:bf:ce:87:34"],
      "name": "6c:92:bf:ce:87:34",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b5c9d4588b5784bd4fbd2"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68/tags",
      "pollers": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b5c9d4588b5784bd4fbc6"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb/catalogs",
      "id": "5d9b7d6e4588b5784bd4fcdb",
      "identifiers": ["6c:92:bf:ce:8b:20"],
      "name": "6c:92:bf:ce:8b:20",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b7e054588b5784bd4fd04"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb/tags",
      "pollers": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b7e054588b5784bd4fcf8"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb/workflows",
      "ibms": []
    },
    {
      "autoDiscover": false,
      "catalogs": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c/catalogs",
      "id": "5d9b9a084588b5784bd4fd4c",
      "identifiers": ["6c:92:bf:ce:7f:a1"],
      "name": "6c:92:bf:ce:7f:a1",
      "obms": [
        {
          "service": "ipmi-obm-service",
          "ref": "/api/2.0/obms/5d9b9b674588b5784bd4fd7b"
        }
      ],
      "tags": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c/tags",
      "pollers": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c/pollers",
      "relations": [
        {
          "relationType": "enclosedBy",
          "info": null,
          "targets": ["5d9b9b674588b5784bd4fd69"]
        }
      ],
      "sku": "/api/2.0/skus/00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "type": "compute",
      "workflows": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c/workflows",
      "ibms": []
    }
  ],
  "tags":[],
  "obms": [
    {
      "id": "5d9b463a4588b5784bd4fabf",
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f963",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c5:a9"
      }
    },
    {
      "id": "5d9b463a4588b5784bd4fac0",
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f980",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c7:05"
      }
    },
    {
      "id": "5d9b464e4588b5784bd4fad2",
      "node": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c4:a1"
      }
    },
    {
      "id": "5d9b46914588b5784bd4faef",
      "node": "/api/2.0/nodes/5d9b45fa4588b5784bd4fa85",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d4:31:91"
      }
    },
    {
      "id": "5d9b46b44588b5784bd4fb02",
      "node": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c4:9b"
      }
    },
    {
      "id": "5d9b473a4588b5784bd4fb15",
      "node": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:b2:2e:dd"
      }
    },
    {
      "id": "5d9b47514588b5784bd4fb2d",
      "node": "/api/2.0/nodes/5d9b45e84588b5784bd4fa4b",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c3:87"
      }
    },
    {
      "id": "5d9b5b8a4588b5784bd4fbb3",
      "node": "/api/2.0/nodes/5d9b5b084588b5784bd4fb2e",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:be:dd"
      }
    },
    {
      "id": "5d9b5bcf4588b5784bd4fbc5",
      "node": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d3:2d:15"
      }
    },
    {
      "id": "5d9b5c9d4588b5784bd4fbd2",
      "node": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c3:87"
      }
    },
    {
      "id": "5d9b6e5e4588b5784bd4fc01",
      "node": "/api/2.0/nodes/5d9b6ddb4588b5784bd4fbd9",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:be:dd"
      }
    },
    {
      "id": "5d9b72b64588b5784bd4fc88",
      "node": "/api/2.0/nodes/5d9b72294588b5784bd4fc25",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c4:dd"
      }
    },
    {
      "id": "5d9b72fc4588b5784bd4fca0",
      "node": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d4:31:91"
      }
    },
    {
      "id": "5d9b7e054588b5784bd4fd04",
      "node": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d4:2a:c3"
      }
    },
    {
      "id": "5d9b94894588b5784bd4fd33",
      "node": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:be:dd"
      }
    },
    {
      "id": "5d9b95904588b5784bd4fd4b",
      "node": "/api/2.0/nodes/5d9b7d604588b5784bd4fcbe",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c2:1f"
      }
    },
    {
      "id": "5d9b9b674588b5784bd4fd7b",
      "node": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c",
      "service": "ipmi-obm-service",
      "config": {
        "user": "admin",
        "host": "6c:92:bf:d0:c2:1f"
      }
    }
  ],
  "pollers": [
    {
      "id": "5d9b463a4588b5784bd4fab9",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f963",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:41.967Z",
      "lastFinished": "2019-12-10T13:44:42.115Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4faba",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f963",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:16.046Z",
      "lastFinished": "2019-12-10T13:44:16.730Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fabc",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f963",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:48.187Z",
      "lastFinished": "2019-12-10T13:44:51.024Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fabd",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f963",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "0374",
        "lastSelDeleteTimeLastRun": "2019-05-24T08:59:17.000Z"
      },
      "lastStarted": "2019-12-10T13:44:08.788Z",
      "lastFinished": "2019-12-10T13:44:18.935Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fabe",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f963",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:29.517Z",
      "lastFinished": "2019-12-10T13:44:29.626Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b464e4588b5784bd4fad4",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "07d7",
        "lastSelDeleteTimeLastRun": "2019-05-24T09:02:40.000Z"
      },
      "lastStarted": "2019-12-10T13:44:07.724Z",
      "lastFinished": "2019-12-10T13:44:27.495Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72b64588b5784bd4fc89",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72294588b5784bd4fc25",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:21.333Z",
      "lastFinished": "2019-12-10T13:44:21.871Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72b64588b5784bd4fc8a",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72294588b5784bd4fc25",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:43:58.286Z",
      "lastFinished": "2019-12-10T13:43:58.765Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72b64588b5784bd4fc8b",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72294588b5784bd4fc25",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "04ae",
        "lastSelDeleteTimeLastRun": "2019-05-24T09:24:40.000Z"
      },
      "lastStarted": "2019-12-10T13:44:07.694Z",
      "lastFinished": "2019-12-10T13:44:39.938Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72b64588b5784bd4fc8c",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b72294588b5784bd4fc25",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:40.940Z",
      "lastFinished": "2019-12-10T13:44:41.201Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72b64588b5784bd4fc8d",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72294588b5784bd4fc25",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:06.647Z",
      "lastFinished": "2019-12-10T13:44:41.461Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72fc4588b5784bd4fc9a",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:47.068Z",
      "lastFinished": "2019-12-10T13:44:52.817Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fac1",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f980",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:31.533Z",
      "lastFinished": "2019-12-10T13:44:36.262Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fac3",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f980",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "035c",
        "lastSelDeleteTimeLastRun": "2019-05-24T09:02:20.000Z"
      },
      "lastStarted": "2019-12-10T13:43:59.298Z",
      "lastFinished": "2019-12-10T13:44:05.016Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fac4",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f980",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:41.961Z",
      "lastFinished": "2019-12-10T13:44:42.294Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fac5",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f980",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:53.427Z",
      "lastFinished": "2019-12-10T13:44:53.535Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fac6",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f980",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:41.978Z",
      "lastFinished": "2019-12-10T13:44:42.219Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fabb",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f963",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:14.000Z",
      "lastFinished": "2019-12-10T13:44:23.395Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b463a4588b5784bd4fac2",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45b74588b5784bd4f980",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU1_Status (0x75)": { "Presence detected": true },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:32.644Z",
      "lastFinished": "2019-12-10T13:44:39.869Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b464e4588b5784bd4fad3",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:18.160Z",
      "lastFinished": "2019-12-10T13:44:19.047Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b464e4588b5784bd4fad5",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:52.367Z",
      "lastFinished": "2019-12-10T13:44:52.549Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b464e4588b5784bd4fad6",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:47.088Z",
      "lastFinished": "2019-12-10T13:44:47.233Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b464e4588b5784bd4fad8",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:18.266Z",
      "lastFinished": "2019-12-10T13:44:24.673Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b464e4588b5784bd4fad7",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c14588b5784bd4f9ba",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:05.625Z",
      "lastFinished": "2019-12-10T13:44:13.924Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b46b44588b5784bd4fb04",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:49.247Z",
      "lastFinished": "2019-12-10T13:44:52.106Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b46b44588b5784bd4fb05",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:09.808Z",
      "lastFinished": "2019-12-10T13:44:09.938Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b46b44588b5784bd4fb06",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "036a",
        "lastSelDeleteTimeLastRun": "2019-05-24T09:10:34.000Z"
      },
      "lastStarted": "2019-12-10T13:43:51.132Z",
      "lastFinished": "2019-12-10T13:43:56.282Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b46b44588b5784bd4fb07",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:21.324Z",
      "lastFinished": "2019-12-10T13:44:21.663Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b46b44588b5784bd4fb08",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:49.226Z",
      "lastFinished": "2019-12-10T13:44:49.340Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b46b44588b5784bd4fb03",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45c34588b5784bd4f9d7",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:16.059Z",
      "lastFinished": "2019-12-10T13:44:25.041Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b473a4588b5784bd4fb16",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:34.837Z",
      "lastFinished": "2019-12-10T13:44:35.070Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b473a4588b5784bd4fb17",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "1ae9",
        "lastSelDeleteTimeLastRun": "2018-09-11T02:08:27.000Z"
      },
      "lastStarted": "2019-12-10T13:43:52.160Z",
      "lastFinished": "2019-12-10T13:44:48.226Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b473a4588b5784bd4fb18",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:44.040Z",
      "lastFinished": "2019-12-10T13:44:44.444Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b473a4588b5784bd4fb19",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:33.759Z",
      "lastFinished": "2019-12-10T13:44:34.903Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b473a4588b5784bd4fb1a",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:15.033Z",
      "lastFinished": "2019-12-10T13:44:29.355Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b473a4588b5784bd4fb1b",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b45d24588b5784bd4f9f4",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU1_Status (0x75)": { "Presence detected": true },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH0_DIMM1 (0x84)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH1_DIMM1 (0x86)": { "Presence Detected": true },
            "CPU0_CH2_DIMM0 (0x87)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU0_CH5_DIMM0 (0x8d)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH0_DIMM1 (0x90)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH1_DIMM1 (0x92)": { "Presence Detected": true },
            "CPU1_CH2_DIMM0 (0x93)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "CPU1_CH5_DIMM0 (0x99)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK2_Status (0xb6)": { "Drive Present": true },
            "DISK3_Status (0xb7)": { "Drive Present": true },
            "DISK4_Status (0xb8)": { "Drive Present": true },
            "DISK5_Status (0xb9)": { "Drive Present": true },
            "DISK8_Status (0xbc)": { "Drive Present": true },
            "DISK9_Status (0xbd)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            },
            "Event_Log (0xeb)": { "Log almost full": true }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:00.386Z",
      "lastFinished": "2019-12-10T13:44:24.980Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5bcf4588b5784bd4fbbf",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:09.868Z",
      "lastFinished": "2019-12-10T13:44:10.103Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5bcf4588b5784bd4fbc0",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:06.637Z",
      "lastFinished": "2019-12-10T13:44:06.934Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72b64588b5784bd4fc8e",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b72294588b5784bd4fc25",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:18.151Z",
      "lastFinished": "2019-12-10T13:44:37.241Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72fc4588b5784bd4fc9b",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:07.746Z",
      "lastFinished": "2019-12-10T13:44:08.222Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72fc4588b5784bd4fc9c",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "045c",
        "lastSelDeleteTimeLastRun": "2019-05-21T15:40:06.000Z"
      },
      "lastStarted": "2019-12-10T13:43:49.099Z",
      "lastFinished": "2019-12-10T13:44:08.443Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72fc4588b5784bd4fc9e",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:51.285Z",
      "lastFinished": "2019-12-10T13:44:51.503Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72fc4588b5784bd4fc9f",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:24.441Z",
      "lastFinished": "2019-12-10T13:44:25.058Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b72fc4588b5784bd4fc9d",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b72654588b5784bd4fc5f",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": { "Presence detected": true },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Fully Redundant": true
            },
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "CPU0_C0D0 (0x83)": { "Presence Detected": true },
            "CPU0_C0D1 (0x84)": { "Presence Detected": true },
            "CPU0_C1D0 (0x85)": { "Presence Detected": true },
            "CPU0_C1D1 (0x86)": { "Presence Detected": true },
            "CPU0_C3D0 (0x89)": { "Presence Detected": true },
            "CPU0_C3D1 (0x8a)": { "Presence Detected": true },
            "CPU0_C4D0 (0x8b)": { "Presence Detected": true },
            "CPU0_C4D1 (0x8c)": { "Presence Detected": true },
            "CPU1_C0D0 (0x8f)": { "Presence Detected": true },
            "CPU1_C0D1 (0x90)": { "Presence Detected": true },
            "CPU1_C1D0 (0x91)": { "Presence Detected": true },
            "CPU1_C1D1 (0x92)": { "Presence Detected": true },
            "CPU1_C3D0 (0x95)": { "Presence Detected": true },
            "CPU1_C3D1 (0x96)": { "Presence Detected": true },
            "CPU1_C4D0 (0x97)": { "Presence Detected": true },
            "CPU1_C4D1 (0x98)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK2_Status (0xb6)": { "Drive Present": true },
            "DISK3_Status (0xb7)": { "Drive Present": true },
            "DISK4_Status (0xb8)": { "Drive Present": true },
            "DISK5_Status (0xb9)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "DISK8_Status (0xbc)": { "Drive Present": true },
            "DISK9_Status (0xbd)": { "Drive Present": true },
            "DISK10_Status (0xbe)": { "Drive Present": true },
            "DISK11_Status (0xbf)": { "Drive Present": true },
            "DISK12_Status (0xc0)": { "Drive Present": true },
            "DISK13_Status (0xc1)": { "Drive Present": true },
            "DISK14_Status (0xc2)": { "Drive Present": true },
            "DISK15_Status (0xc3)": { "Drive Present": true },
            "DISK16_Status (0xc4)": { "Drive Present": true },
            "DISK17_Status (0xc5)": { "Drive Present": true },
            "DISK18_Status (0xc6)": { "Drive Present": true },
            "DISK19_Status (0xc7)": { "Drive Present": true },
            "DISK20_Status (0xc8)": { "Drive Present": true },
            "DISK21_Status (0xc9)": { "Drive Present": true },
            "DISK22_Status (0xca)": { "Drive Present": true },
            "DISK23_Status (0xcb)": { "Drive Present": true },
            "DISK24_Status (0xcc)": { "Drive Present": true },
            "DISK25_Status (0xcd)": { "Drive Present": true },
            "DISK26_Status (0xce)": { "Drive Present": true },
            "DISK27_Status (0xcf)": { "Drive Present": true },
            "DISK28_Status (0xd0)": { "Drive Present": true },
            "DISK29_Status (0xd1)": { "Drive Present": true },
            "DISK30_Status (0xd2)": { "Drive Present": true },
            "DISK31_Status (0xd3)": { "Drive Present": true },
            "DISK32_Status (0xd4)": { "Drive Present": true },
            "DISK33_Status (0xd5)": { "Drive Present": true },
            "DISK34_Status (0xd6)": { "Drive Present": true },
            "DISK35_Status (0xd7)": { "Drive Present": true },
            "DISK36_Status (0xd8)": { "Drive Present": true },
            "DISK37_Status (0xd9)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:43:53.221Z",
      "lastFinished": "2019-12-10T13:44:17.375Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b7e054588b5784bd4fd07",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "11bd",
        "lastSelDeleteTimeLastRun": "2019-05-21T14:29:11.000Z"
      },
      "lastStarted": "2019-12-10T13:44:52.353Z",
      "lastFinished": "2019-12-10T13:43:51.673Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b7e054588b5784bd4fd08",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:07.703Z",
      "lastFinished": "2019-12-10T13:44:08.119Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b7e054588b5784bd4fd09",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:52.362Z",
      "lastFinished": "2019-12-10T13:44:22.115Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b7e054588b5784bd4fd0a",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:48.180Z",
      "lastFinished": "2019-12-10T13:44:48.353Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b94894588b5784bd4fd34",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:48.172Z",
      "lastFinished": "2019-12-10T13:44:50.901Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5bcf4588b5784bd4fbc1",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:47.079Z",
      "lastFinished": "2019-12-10T13:44:47.239Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5bcf4588b5784bd4fbc2",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "04a8",
        "lastSelDeleteTimeLastRun": "2019-05-21T15:19:10.000Z"
      },
      "lastStarted": "2019-12-10T13:44:53.436Z",
      "lastFinished": "2019-12-10T13:43:53.078Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5bcf4588b5784bd4fbc4",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:23.394Z",
      "lastFinished": "2019-12-10T13:44:26.772Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5bcf4588b5784bd4fbc3",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b424588b5784bd4fb85",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": { "Presence detected": true },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Fully Redundant": true
            },
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "CPU0_C0D0 (0x83)": { "Presence Detected": true },
            "CPU0_C0D1 (0x84)": { "Presence Detected": true },
            "CPU0_C1D0 (0x85)": { "Presence Detected": true },
            "CPU0_C1D1 (0x86)": { "Presence Detected": true },
            "CPU0_C3D0 (0x89)": { "Presence Detected": true },
            "CPU0_C3D1 (0x8a)": { "Presence Detected": true },
            "CPU0_C4D0 (0x8b)": { "Presence Detected": true },
            "CPU0_C4D1 (0x8c)": { "Presence Detected": true },
            "CPU1_C0D0 (0x8f)": { "Presence Detected": true },
            "CPU1_C0D1 (0x90)": { "Presence Detected": true },
            "CPU1_C1D0 (0x91)": { "Presence Detected": true },
            "CPU1_C1D1 (0x92)": { "Presence Detected": true },
            "CPU1_C3D0 (0x95)": { "Presence Detected": true },
            "CPU1_C3D1 (0x96)": { "Presence Detected": true },
            "CPU1_C4D0 (0x97)": { "Presence Detected": true },
            "CPU1_C4D1 (0x98)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK2_Status (0xb6)": { "Drive Present": true },
            "DISK3_Status (0xb7)": { "Drive Present": true },
            "DISK4_Status (0xb8)": { "Drive Present": true },
            "DISK5_Status (0xb9)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "DISK8_Status (0xbc)": { "Drive Present": true },
            "DISK9_Status (0xbd)": { "Drive Present": true },
            "DISK10_Status (0xbe)": { "Drive Present": true },
            "DISK11_Status (0xbf)": { "Drive Present": true },
            "DISK12_Status (0xc0)": { "Drive Present": true },
            "DISK13_Status (0xc1)": { "Drive Present": true },
            "DISK14_Status (0xc2)": { "Drive Present": true },
            "DISK15_Status (0xc3)": { "Drive Present": true },
            "DISK16_Status (0xc4)": { "Drive Present": true },
            "DISK17_Status (0xc5)": { "Drive Present": true },
            "DISK18_Status (0xc6)": { "Drive Present": true },
            "DISK19_Status (0xc7)": { "Drive Present": true },
            "DISK20_Status (0xc8)": { "Drive Present": true },
            "DISK21_Status (0xc9)": { "Drive Present": true },
            "DISK22_Status (0xca)": { "Drive Present": true },
            "DISK23_Status (0xcb)": { "Drive Present": true },
            "DISK24_Status (0xcc)": { "Drive Present": true },
            "DISK25_Status (0xcd)": { "Drive Present": true },
            "DISK26_Status (0xce)": { "Drive Present": true },
            "DISK27_Status (0xcf)": { "Drive Present": true },
            "DISK28_Status (0xd0)": { "Drive Present": true },
            "DISK29_Status (0xd1)": { "Drive Present": true },
            "DISK30_Status (0xd2)": { "Drive Present": true },
            "DISK31_Status (0xd3)": { "Drive Present": true },
            "DISK32_Status (0xd4)": { "Drive Present": true },
            "DISK33_Status (0xd5)": { "Drive Present": true },
            "DISK34_Status (0xd6)": { "Drive Present": true },
            "DISK35_Status (0xd7)": { "Drive Present": true },
            "DISK36_Status (0xd8)": { "Drive Present": true },
            "DISK37_Status (0xd9)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:09.818Z",
      "lastFinished": "2019-12-10T13:44:15.567Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5c9d4588b5784bd4fbd4",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:38.876Z",
      "lastFinished": "2019-12-10T13:44:48.833Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5c9d4588b5784bd4fbd5",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:17.131Z",
      "lastFinished": "2019-12-10T13:44:17.546Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5c9d4588b5784bd4fbd6",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:38.885Z",
      "lastFinished": "2019-12-10T13:44:39.153Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5c9d4588b5784bd4fbd7",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "0533",
        "lastSelDeleteTimeLastRun": "2019-05-25T20:44:39.000Z"
      },
      "lastStarted": "2019-12-10T13:43:59.308Z",
      "lastFinished": "2019-12-10T13:44:16.269Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5c9d4588b5784bd4fbd8",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:14.004Z",
      "lastFinished": "2019-12-10T13:44:14.312Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b5c9d4588b5784bd4fbd3",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b5b344588b5784bd4fb68",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU1_Status (0x75)": { "Presence detected": true },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH0_DIMM1 (0x84)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH1_DIMM1 (0x86)": { "Presence Detected": true },
            "CPU0_CH2_DIMM0 (0x87)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU0_CH5_DIMM0 (0x8d)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH0_DIMM1 (0x90)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH1_DIMM1 (0x92)": { "Presence Detected": true },
            "CPU1_CH2_DIMM0 (0x93)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "CPU1_CH5_DIMM0 (0x99)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK2_Status (0xb6)": { "Drive Present": true },
            "DISK3_Status (0xb7)": { "Drive Present": true },
            "DISK4_Status (0xb8)": { "Drive Present": true },
            "DISK5_Status (0xb9)": { "Drive Present": true },
            "DISK8_Status (0xbc)": { "Drive Present": true },
            "DISK9_Status (0xbd)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:40.931Z",
      "lastFinished": "2019-12-10T13:44:52.353Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b7e054588b5784bd4fd05",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:02.503Z",
      "lastFinished": "2019-12-10T13:44:02.664Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b7e054588b5784bd4fd06",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b7d6e4588b5784bd4fcdb",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": { "Presence detected": true },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Fully Redundant": true
            },
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "CPU0_C0D0 (0x83)": { "Presence Detected": true },
            "CPU0_C0D1 (0x84)": { "Presence Detected": true },
            "CPU0_C1D0 (0x85)": { "Presence Detected": true },
            "CPU0_C1D1 (0x86)": { "Presence Detected": true },
            "CPU0_C3D0 (0x89)": { "Presence Detected": true },
            "CPU0_C3D1 (0x8a)": { "Presence Detected": true },
            "CPU0_C4D0 (0x8b)": { "Presence Detected": true },
            "CPU0_C4D1 (0x8c)": { "Presence Detected": true },
            "CPU1_C0D0 (0x8f)": { "Presence Detected": true },
            "CPU1_C0D1 (0x90)": { "Presence Detected": true },
            "CPU1_C1D0 (0x91)": { "Presence Detected": true },
            "CPU1_C1D1 (0x92)": { "Presence Detected": true },
            "CPU1_C3D0 (0x95)": { "Presence Detected": true },
            "CPU1_C3D1 (0x96)": { "Presence Detected": true },
            "CPU1_C4D0 (0x97)": { "Presence Detected": true },
            "CPU1_C4D1 (0x98)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK2_Status (0xb6)": { "Drive Present": true },
            "DISK3_Status (0xb7)": { "Drive Present": true },
            "DISK4_Status (0xb8)": { "Drive Present": true },
            "DISK5_Status (0xb9)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "DISK8_Status (0xbc)": { "Drive Present": true },
            "DISK9_Status (0xbd)": { "Drive Present": true },
            "DISK10_Status (0xbe)": { "Drive Present": true },
            "DISK11_Status (0xbf)": { "Drive Present": true },
            "DISK12_Status (0xc0)": { "Drive Present": true },
            "DISK13_Status (0xc1)": { "Drive Present": true },
            "DISK14_Status (0xc2)": { "Drive Present": true },
            "DISK15_Status (0xc3)": { "Drive Present": true },
            "DISK16_Status (0xc4)": { "Drive Present": true },
            "DISK17_Status (0xc5)": { "Drive Present": true },
            "DISK18_Status (0xc6)": { "Drive Present": true },
            "DISK19_Status (0xc7)": { "Drive Present": true },
            "DISK20_Status (0xc8)": { "Drive Present": true },
            "DISK21_Status (0xc9)": { "Drive Present": true },
            "DISK22_Status (0xca)": { "Drive Present": true },
            "DISK23_Status (0xcb)": { "Drive Present": true },
            "DISK24_Status (0xcc)": { "Drive Present": true },
            "DISK25_Status (0xcd)": { "Drive Present": true },
            "DISK26_Status (0xce)": { "Drive Present": true },
            "DISK27_Status (0xcf)": { "Drive Present": true },
            "DISK28_Status (0xd0)": { "Drive Present": true },
            "DISK29_Status (0xd1)": { "Drive Present": true },
            "DISK30_Status (0xd2)": { "Drive Present": true },
            "DISK31_Status (0xd3)": { "Drive Present": true },
            "DISK32_Status (0xd4)": { "Drive Present": true },
            "DISK33_Status (0xd5)": { "Drive Present": true },
            "DISK34_Status (0xd6)": { "Drive Present": true },
            "DISK35_Status (0xd7)": { "Drive Present": true },
            "DISK36_Status (0xd8)": { "Drive Present": true },
            "DISK37_Status (0xd9)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            },
            "Event_Log (0xeb)": { "Log full": true }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:43:45.966Z",
      "lastFinished": "2019-12-10T13:43:56.020Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b94894588b5784bd4fd35",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "03a0",
        "lastSelDeleteTimeLastRun": "2019-05-24T09:12:07.000Z"
      },
      "lastStarted": "2019-12-10T13:44:03.537Z",
      "lastFinished": "2019-12-10T13:44:08.981Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b94894588b5784bd4fd37",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:49.220Z",
      "lastFinished": "2019-12-10T13:44:49.389Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b94894588b5784bd4fd38",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:28.498Z",
      "lastFinished": "2019-12-10T13:44:28.639Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b94894588b5784bd4fd39",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:43:53.206Z",
      "lastFinished": "2019-12-10T13:43:53.560Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b94894588b5784bd4fd36",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b94064588b5784bd4fd0b",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU1_Status (0x75)": { "Presence detected": true },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK6_Status (0xba)": { "Drive Present": true },
            "DISK7_Status (0xbb)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:13.996Z",
      "lastFinished": "2019-12-10T13:44:20.973Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b9b674588b5784bd4fd76",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c",
      "config": {
        "command": "selEntries",
        "lastPreviouslyReadSelEntry": "03e7",
        "lastSelDeleteTimeLastRun": "2019-05-25T20:11:59.000Z"
      },
      "lastStarted": "2019-12-10T13:44:25.461Z",
      "lastFinished": "2019-12-10T13:44:34.742Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b9b674588b5784bd4fd77",
      "type": "ipmi",
      "pollInterval": 30000,
      "node": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c",
      "config": { "command": "driveHealth" },
      "lastStarted": "2019-12-10T13:44:46.056Z",
      "lastFinished": "2019-12-10T13:44:48.825Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b9b674588b5784bd4fd78",
      "type": "ipmi",
      "pollInterval": 15000,
      "node": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c",
      "config": { "command": "chassis" },
      "lastStarted": "2019-12-10T13:44:49.233Z",
      "lastFinished": "2019-12-10T13:44:49.373Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b9b674588b5784bd4fd79",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c",
      "config": { "command": "selInformation" },
      "lastStarted": "2019-12-10T13:44:41.952Z",
      "lastFinished": "2019-12-10T13:44:42.100Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b9b674588b5784bd4fd7a",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c",
      "config": { "command": "sel" },
      "lastStarted": "2019-12-10T13:44:11.906Z",
      "lastFinished": "2019-12-10T13:44:12.203Z",
      "paused": false,
      "failureCount": 0
    },
    {
      "id": "5d9b9b674588b5784bd4fd75",
      "type": "ipmi",
      "pollInterval": 60000,
      "node": "/api/2.0/nodes/5d9b9a084588b5784bd4fd4c",
      "config": {
        "command": "sdr",
        "inCondition": {
          "discrete": {
            "CPU0_Status (0x7d)": { "Presence detected": true },
            "CPU1_Status (0x7e)": { "Presence detected": true },
            "PSU0_Status (0x74)": { "Presence detected": true },
            "PSU1_Status (0x75)": {
              "Presence detected": true,
              "Power Supply AC lost": true
            },
            "PSU_Redundant (0x78)": {
              "Redundancy State": true,
              "Redundancy Lost": true
            },
            "FAN0_Present (0x60)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN1_Present (0x61)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN2_Present (0x62)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN3_Present (0x63)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN4_Present (0x64)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN5_Present (0x65)": {
              "Availability State": true,
              "Device Present": true
            },
            "FAN6_Present (0x66)": {
              "Availability State": true,
              "Device Present": true
            },
            "CPU0_CH0_DIMM0 (0x83)": { "Presence Detected": true },
            "CPU0_CH0_DIMM1 (0x84)": { "Presence Detected": true },
            "CPU0_CH1_DIMM0 (0x85)": { "Presence Detected": true },
            "CPU0_CH1_DIMM1 (0x86)": { "Presence Detected": true },
            "CPU0_CH2_DIMM0 (0x87)": { "Presence Detected": true },
            "CPU0_CH3_DIMM0 (0x89)": { "Presence Detected": true },
            "CPU0_CH4_DIMM0 (0x8b)": { "Presence Detected": true },
            "CPU0_CH5_DIMM0 (0x8d)": { "Presence Detected": true },
            "CPU1_CH0_DIMM0 (0x8f)": { "Presence Detected": true },
            "CPU1_CH0_DIMM1 (0x90)": { "Presence Detected": true },
            "CPU1_CH1_DIMM0 (0x91)": { "Presence Detected": true },
            "CPU1_CH1_DIMM1 (0x92)": { "Presence Detected": true },
            "CPU1_CH2_DIMM0 (0x93)": { "Presence Detected": true },
            "CPU1_CH3_DIMM0 (0x95)": { "Presence Detected": true },
            "CPU1_CH4_DIMM0 (0x97)": { "Presence Detected": true },
            "CPU1_CH5_DIMM0 (0x99)": { "Presence Detected": true },
            "DISK0_Status (0xb4)": { "Drive Present": true },
            "DISK1_Status (0xb5)": { "Drive Present": true },
            "DISK2_Status (0xb6)": { "Drive Present": true },
            "DISK3_Status (0xb7)": { "Drive Present": true },
            "DISK4_Status (0xb8)": { "Drive Present": true },
            "DISK5_Status (0xb9)": { "Drive Present": true },
            "DISK8_Status (0xbc)": { "Drive Present": true },
            "DISK9_Status (0xbd)": { "Drive Present": true },
            "BMC_Boot_Up (0xec)": {
              "Availability State": true,
              "Device Enabled": true
            }
          },
          "threshold": {}
        }
      },
      "lastStarted": "2019-12-10T13:44:24.449Z",
      "lastFinished": "2019-12-10T13:44:32.635Z",
      "paused": false,
      "failureCount": 0
    }
  ],
  "profiles": [
    {
      "id": "fc87dbe6-ccac-424e-ae9b-9717f7bee71f",
      "hash": "S8PR0gTTOMNwe5OK1CkG+Q==",
      "name": "install-coreos.ipxe",
      "scope": "global"
    },
    {
      "id": "17c2f6a3-0b49-4918-b3d2-3c3c53b3fa15",
      "hash": "2B2a9N5rRp2xua4O8MC2DA==",
      "name": "install-suse.ipxe",
      "scope": "global"
    },
    {
      "id": "01ab935a-4691-42a9-a0be-c1d105bdce20",
      "hash": "x3F5NRDi9DYmllMJe6fFtw==",
      "name": "redirect.ipxe",
      "scope": "global"
    },
    {
      "id": "efbb61a5-1953-4ac0-a35f-a19fa573c37b",
      "hash": "zGFDw2LSPSHkdO5AHzGhYw==",
      "name": "zerotouch-configure.zt",
      "scope": "global"
    },
    {
      "id": "3653819b-2737-4d91-8211-4b1bad432e6d",
      "hash": "7ZQ9ZTSs/6Gbgfw3EmFsxw==",
      "name": "compute.ipxe",
      "scope": "global"
    },
    {
      "id": "0c119f79-3eb4-4fb4-b13e-d1c7a9bd06d3",
      "hash": "KN+LxeqJ+R0LcljZ58vZNg==",
      "name": "dell-onie.sh",
      "scope": "global"
    },
    {
      "id": "796ae772-05ab-488b-bc72-aca555e3332d",
      "hash": "oNzHIB2/trjDcMxb21BtYQ==",
      "name": "install-debian.ipxe",
      "scope": "global"
    },
    {
      "id": "34174339-f24a-4fc1-ba75-fffb5e9198e5",
      "hash": "Hj71HEPWNw10BFv6eccrYA==",
      "name": "ipxe-info.ipxe",
      "scope": "global"
    },
    {
      "id": "6d515870-7d95-4019-a77e-62f03904082a",
      "hash": "1sktcicXW41qYNVbiLkYDg==",
      "name": "run-uefi.ipxe",
      "scope": "global"
    },
    {
      "id": "0c85c85d-290e-4dae-98f9-eaf3be7f2620",
      "hash": "kGk8+IkSxHjy6X3m+LJevg==",
      "name": "zerotouch-default.zt",
      "scope": "global"
    },
    {
      "id": "fc17367b-7d2e-47e6-9940-591e14a799a8",
      "hash": "bZsjNHh7Jq2ceoi8fcc9hA==",
      "name": "bootdisk-firstdisk.ipxe",
      "scope": "global"
    },
    {
      "id": "5b05cba8-4aed-4f98-983a-073374f999d9",
      "hash": "xqkh5lC4RU1zxzkD8vq3Yg==",
      "name": "dos.ipxe",
      "scope": "global"
    },
    {
      "id": "48bf0e97-0fbb-4b73-9648-33fd9e07a50f",
      "hash": "Zc54gkv1DUP+a7tNpH9SQA==",
      "name": "install-esx.ipxe",
      "scope": "global"
    },
    {
      "id": "4ff37531-6229-4a54-8eeb-20fd208acbbb",
      "hash": "X9dCW5apxV4ar9B/bvpYJw==",
      "name": "linux-generic.ipxe",
      "scope": "global"
    },
    {
      "id": "235d72df-5fe6-4f05-8b4e-deae318ebc1d",
      "hash": "w0Lg/bVZmYYaEu5CziNXlQ==",
      "name": "taskrunner.py",
      "scope": "global"
    },
    {
      "id": "3ced3f5b-1edb-475f-be77-188e59864b09",
      "hash": "7ZQ9ZTSs/6Gbgfw3EmFsxw==",
      "name": "compute.ipxe.backup",
      "scope": "global"
    },
    {
      "id": "6a7bd268-a5bc-4ddd-b335-3e7a1078d951",
      "hash": "lvj7C1UoQaLSPYw2xCou5A==",
      "name": "end-ipxe.ipxe",
      "scope": "global"
    },
    {
      "id": "18e1b737-2d80-43e9-b51b-741c9687fcef",
      "hash": "OVi00eFO0X7d80/YsM+JZQ==",
      "name": "install-esx60.ipxe",
      "scope": "global"
    },
    {
      "id": "5d93a938-ab94-4869-8479-19584aeecfe9",
      "hash": "UfCgfiEWfKobd6r8fn1TSA==",
      "name": "linux.ipxe",
      "scope": "global"
    },
    {
      "id": "82462ed0-138a-433e-adcd-882418c43985",
      "hash": "G4625N5y9wMoCOVkrpNzKA==",
      "name": "ubuntu-custom.ipxe",
      "scope": "global"
    },
    {
      "id": "7eec3903-372d-409b-b667-5c56901020fd",
      "hash": "ZlVDMMXjPWcdBobJbq9WGA==",
      "name": "boilerplate.ipxe",
      "scope": "global"
    },
    {
      "id": "02b3d61b-ec2d-4d4b-9495-59462a413ca2",
      "hash": "h52dDKvj7YJE1Ucy7mS+OA==",
      "name": "defaultboot.ipxe",
      "scope": "global"
    },
    {
      "id": "a7433a80-7660-45a5-896c-9ddf736adbea",
      "hash": "yhhUWj+Un1AKFLYIBAklvA==",
      "name": "install-centos.ipxe",
      "scope": "global"
    },
    {
      "id": "4ab218d3-7b33-48a2-8b59-250a33028d26",
      "hash": "L4TlIy49mjY8YVH7vPDN3w==",
      "name": "install-photon-os.ipxe",
      "scope": "global"
    },
    {
      "id": "c464f27d-0d0f-4115-997c-10060994b9b3",
      "hash": "s7G+YgZOl3pir8AdDjcx0Q==",
      "name": "rancherOS.ipxe",
      "scope": "global"
    },
    {
      "id": "1d1efa0c-d190-4a39-90a5-c3f5979a5ebd",
      "hash": "XT4exvPhlmeFwdYxy/nDGA==",
      "name": "windows.ipxe",
      "scope": "global"
    },
    {
      "id": "85141a4b-6e19-40cb-bc58-f648903ab7d0",
      "hash": "kXZ3dJqo+vUOT+Tvj1euOg==",
      "name": "boot-livecd.ipxe",
      "scope": "global"
    },
    {
      "id": "f00d93d6-78d4-4346-934c-5e72ce385e3f",
      "hash": "iKfjfkLIkpoh/Dx4TyGnkA==",
      "name": "dell-bmp.sh",
      "scope": "global"
    }
  ],
  "skus": [
    {
      "name": "Custom Inspur Provisioning SKU",
      "id": "00185d5e-a035-4f5a-90ad-c952b1144f9e",
      "discoveryGraphName": "Graph.Setup.Inspur.Custom",
      "rules": [
        {
          "path": "dmi.Base Board Information.Manufacturer",
          "equals": "Inspur"
        }
      ]
    }
  ],
  "templates": [
    {
      "id": "a6956088-73c6-4162-9e41-8d91d8dec58f",
      "hash": "m1CAtakJVP4iVNiRHGFU4g==",
      "name": "bootstrap.js",
      "scope": "global"
    },
    {
      "id": "4d0f1e18-b1a3-40bd-934b-d458ccf7a8ef",
      "hash": "9mVhnhsGwrAcBfBQIl3tnw==",
      "name": "get_smart.sh",
      "scope": "global"
    },
    {
      "id": "b5419620-1499-4615-bc8c-ff6b570b7d07",
      "hash": "o1SkSI8UfNMLXVtjZqksPg==",
      "name": "set_bmc_credentials.sh",
      "scope": "global"
    },
    {
      "id": "95842eb7-f8a5-41a8-8b6f-b4ec01a7648b",
      "hash": "SBZmHoeeQRUAOQGQhYaPWA==",
      "name": "winpe-kickstart.ps1",
      "scope": "global"
    },
    {
      "id": "d69e4163-a017-4dfd-9b1e-b570dc0865b0",
      "hash": "fMpGK4vyAxpFba9JkSnlNA==",
      "name": "arista-catalog-ip.py",
      "scope": "global"
    },
    {
      "id": "7b65ea89-ba88-4109-8a34-fe2a81261d60",
      "hash": "PWlzEzaFhSYehMhBDwiwYg==",
      "name": "autounattend_windows_2012_r2_SMC_6028U-TR4+.xml",
      "scope": "global"
    },
    {
      "id": "1136d9fe-9861-43ed-8fc5-685b66f4f4c5",
      "hash": "0o41iVhn0xBwvxWZaaxy6w==",
      "name": "brocade-catalog-version.py",
      "scope": "global"
    },
    {
      "id": "dbd6db1b-1ee3-482b-b453-80d1aca9220e",
      "hash": "Ir02OvabSLxl8wPRuf7+rw==",
      "name": "cisco-deploy-config-and-images.py",
      "scope": "global"
    },
    {
      "id": "d77e45da-a70b-40c8-baa3-26660496537e",
      "hash": "SRtLFmItogparI3zsaD5cQ==",
      "name": "custom-preseed.cfg",
      "scope": "global"
    },
    {
      "id": "f66804d2-f1de-41e3-8f20-3fbed033524f",
      "hash": "nAeOlNGG+Oi5G99P4krmxA==",
      "name": "dell-switch-nos-install.sh",
      "scope": "global"
    },
    {
      "id": "6ac6dd97-9463-410c-9447-5fafcc7ae9f0",
      "hash": "DKN8NUxl/43zG1k2dGA6Xg==",
      "name": "esx-pxelinux-cfg",
      "scope": "global"
    },
    {
      "id": "d8bb810b-9aea-4220-9bfd-3978ca265883",
      "hash": "4sd5fc2gmtrFG4AJ2FYNAQ==",
      "name": "ignition.json",
      "scope": "global"
    },
    {
      "id": "fa33abfc-f75a-4272-b873-89beb4556cc2",
      "hash": "7XBv5lH02CY5tXC4tBtn5A==",
      "name": "debian.rackhdcallback",
      "scope": "global"
    },
    {
      "id": "2007dc62-b580-41b6-8c66-2664033df3dd",
      "hash": "Su0dsdkjsj6kfYcCpkQcuw==",
      "name": "post-install-photon.sh",
      "scope": "global"
    },
    {
      "id": "433d505f-9509-43cc-8967-0841748a9e12",
      "hash": "zdkY7RoJMQdUpA0bankNGA==",
      "name": "pxe-cloud-config.yml",
      "scope": "global"
    },
    {
      "id": "ec7de993-af6f-4bab-9da7-4515641b2193",
      "hash": "2daGG5QnH+h0Z0MUHmN/ow==",
      "name": "set_interfaces.py",
      "scope": "global"
    },
    {
      "id": "6f40cdc7-370b-47c5-88d5-3fa561b96b30",
      "hash": "zz6yQHWMOu116Vcd66J+XA==",
      "name": "cisco-catalog-config.py",
      "scope": "global"
    },
    {
      "id": "0559baab-b981-4258-89ea-56dda51f43fa",
      "hash": "AAMUowOS7/AzQZRjzKIm9g==",
      "name": "Makefile",
      "scope": "global"
    },
    {
      "id": "fd406a75-aa5a-4750-981e-fc0ea10d8b56",
      "hash": "kE5Pbp061TuWorL0dOy/fA==",
      "name": "arista-catalog-snmp-settings.py",
      "scope": "global"
    },
    {
      "id": "bf488305-062c-42d5-8a18-b3c244ed940e",
      "hash": "PWlzEzaFhSYehMhBDwiwYg==",
      "name": "autounattend_windows_2012_r2_unknown.xml",
      "scope": "global"
    },
    {
      "id": "cc068412-d5b1-4423-a5b1-e19c371935e9",
      "hash": "BKBJDDo53MmKbNmKz+4/xA==",
      "name": "brocade-vdx-deploy-config.py",
      "scope": "global"
    },
    {
      "id": "6268e137-a53f-4fc6-b18d-df6babd2521c",
      "hash": "m8ASnUfVeW7hs1S6ppLweQ==",
      "name": "cloud-config.yaml",
      "scope": "global"
    },
    {
      "id": "4923e699-f64c-4f1c-a922-b776bc69e2cf",
      "hash": "pISd0qNIuEspbzIgh47QmQ==",
      "name": "custom-preseed.cfg.test",
      "scope": "global"
    },
    {
      "id": "11804709-38e9-4453-84f6-66c344e86f9e",
      "hash": "bxELCYktCZE2/kmiNpb7mg==",
      "name": "dell-switch-onie-catalog.sh",
      "scope": "global"
    },
    {
      "id": "64f818a4-ea19-4d05-a4ac-8033447461ae",
      "hash": "X02KC2XIW8Mdludis1ZnbA==",
      "name": "esx-ks",
      "scope": "global"
    },
    {
      "id": "222cb7e6-b6c0-4efc-a3eb-3cb73f1ef796",
      "hash": "y4wybWv/eSP4gcu0OGeRWw==",
      "name": "install-coreos.sh",
      "scope": "global"
    },
    {
      "id": "89b009c6-63d2-48c0-b9e2-f93a45385baf",
      "hash": "Oon7OkspKAt65X62wytp+w==",
      "name": "post-install-debian.sh",
      "scope": "global"
    },
    {
      "id": "7121c13a-e32c-41c3-8e17-96a6737f85df",
      "hash": "9dII57UcE37MrE/1RDQLxw==",
      "name": "megaraid-config.sh",
      "scope": "global"
    },
    {
      "id": "c181c62f-d59a-4cce-bc71-7a3e59f29441",
      "hash": "5Ff9eBUg41gD6JqjcqIkFA==",
      "name": "remove_bmc_credentials.sh",
      "scope": "global"
    },
    {
      "id": "b4639bc4-f3f7-4b34-b5c2-90342e1e38d1",
      "hash": "cGW/W1Sfb6bsMFRWo08D7Q==",
      "name": "startup.ps1",
      "scope": "global"
    },
    {
      "id": "e0e532a8-77d7-4668-a41b-e4b947449df0",
      "hash": "OYVu/7alDoL0UdB5IJRA0Q==",
      "name": "centos-ks",
      "scope": "global"
    },
    {
      "id": "1f755ca7-b085-47fb-a846-1a13755dd361",
      "hash": "SYMvzMMUyNAcwhF3tX25wQ==",
      "name": "arista-boot-config",
      "scope": "global"
    },
    {
      "id": "38487db9-86d5-4ce1-83d7-594c58e58f20",
      "hash": "qeBw0PiA9FVqSkSBG3NyKw==",
      "name": "arista-catalog-version.py",
      "scope": "global"
    },
    {
      "id": "bd25f02e-232b-40db-bfa3-157093aa07e0",
      "hash": "ndpd5HooJlZ6RCqo4TADFg==",
      "name": "autounattend_windows_2012_r2_vmware.xml",
      "scope": "global"
    },
    {
      "id": "40dc602b-ec32-44e8-9d97-51ecc9b46de6",
      "hash": "3BVFYB3dZBXQlGRjO27p3Q==",
      "name": "cisco-catalog-snmp-settings.py",
      "scope": "global"
    },
    {
      "id": "d0f23975-9bb7-43cb-8858-998307c65f06",
      "hash": "X7d/8TZBLcHKtkUF9wG2Ww==",
      "name": "custom-preseed",
      "scope": "global"
    },
    {
      "id": "ae2cf6c1-c7ba-4f48-b1a3-4ca9248a956f",
      "hash": "rJcT5ZJgQfHgv4s+kquwgQ==",
      "name": "dell-catalog-sysinfo.sh",
      "scope": "global"
    },
    {
      "id": "d02b1b66-5783-4d38-8fe4-39861f664fe6",
      "hash": "Kzr3R4Hl6YcxfjL45Cfy4A==",
      "name": "esx-boot-cfg",
      "scope": "global"
    },
    {
      "id": "7f1ca1ff-76db-4da5-a1cf-565662d727d5",
      "hash": "NxPdE2T2yGPlRb63XY+I6g==",
      "name": "esx.rackhdcallback",
      "scope": "global"
    },
    {
      "id": "03923051-2893-4485-989e-88e40c354154",
      "hash": "sr0AkQh7BqoxEvgxUDQLPw==",
      "name": "debian-preseed",
      "scope": "global"
    },
    {
      "id": "fc3f05d1-d37c-4912-93b4-e573aa885828",
      "hash": "oPD15rP3LYeA41NI55ilKw==",
      "name": "ubuntu-netplan-interfaces",
      "scope": "global"
    },
    {
      "id": "fac569eb-37cb-4d03-9b57-aa3edc9a3223",
      "hash": "u5lCUwP/DeOoyL91xQ/owQ==",
      "name": "monorail-backup.sh",
      "scope": "global"
    },
    {
      "id": "1d4baac5-bd87-4ade-b803-35c0b953b9a1",
      "hash": "2Hmi/YDYFG9CezRfd4xVOA==",
      "name": "renasar-ansible.pub",
      "scope": "global"
    },
    {
      "id": "99096ae5-fc31-4a7a-8fe5-c1c277e4b601",
      "hash": "+NCzGWpUjEnokJMHhIHzVQ==",
      "name": "suse-autoinst.xml",
      "scope": "global"
    },
    {
      "id": "396d3552-61fd-434d-aeee-f83a96f39f6a",
      "hash": "nn0hsk4DqHGzbqoEt0I/dw==",
      "name": "ansible-external-inventory.js",
      "scope": "global"
    },
    {
      "id": "849556ac-0e44-4f32-b733-e979faf84ec1",
      "hash": "vwhxR8w5HC9bq9MwDd2f0Q==",
      "name": "arista-deploy-startup-config.py",
      "scope": "global"
    },
    {
      "id": "ae78b3f8-ab30-4b74-8c01-1298defe5c6d",
      "hash": "zzCuqvaiVz/7eJbPuor7Og==",
      "name": "bios_check.sh",
      "scope": "global"
    },
    {
      "id": "15af9aab-3cf6-41ce-8287-2ee1550520f1",
      "hash": "Lo6cLoqfufqDLWNLG2sJ5A==",
      "name": "centos.rackhdcallback",
      "scope": "global"
    },
    {
      "id": "5224dbdc-32ac-4516-8b77-55ec3baaaf7e",
      "hash": "YbKVpw0t2R/+acODY14OrA==",
      "name": "custom-preseed.backup",
      "scope": "global"
    },
    {
      "id": "5ef647cb-5a8b-4443-b95f-d8e565e8ecbe",
      "hash": "wNWUNKZpZDxLh9mwqZ0q7w==",
      "name": "dell-switch-basic-config.exp",
      "scope": "global"
    },
    {
      "id": "f520b0fb-1af2-4d6e-aa3b-c57ed9806afe",
      "hash": "92cxE54j06S+D5ulLnAHeQ==",
      "name": "esx-boot-cfg-http",
      "scope": "global"
    },
    {
      "id": "55ae642c-0c5b-4d53-bc43-1fa9c3bee57d",
      "hash": "bztj5VUwKBDQWouwD4x9Sw==",
      "name": "get_driveid.js",
      "scope": "global"
    },
    {
      "id": "4e6ab81e-de62-4875-a049-9b2a9fa4b5dc",
      "hash": "0wmFaRNL2/bRKBhfbTUBcQ==",
      "name": "debian-interfaces",
      "scope": "global"
    },
    {
      "id": "a441cfc3-854b-4919-9493-a7f282e22fe5",
      "hash": "thQvwzyOzBPKRSFctj8Nkw==",
      "name": "photon-os-ks",
      "scope": "global"
    },
    {
      "id": "58637769-9912-4afb-b892-47c34429e8f7",
      "hash": "16nyyO0SmPRbYHKFoGk3Qg==",
      "name": "monorail-restore.sh",
      "scope": "global"
    },
    {
      "id": "2ea0be45-6571-4d96-b8e4-87b4acb742f8",
      "hash": "TVou21wkdixICqOTpjOelg==",
      "name": "secure_erase.py",
      "scope": "global"
    },
    {
      "id": "c25aa3aa-8b64-434b-b6c9-95d990106c60",
      "hash": "IGwCBBONPOW5+ARO4Sh/kA==",
      "name": "unattend_server2012.xml",
      "scope": "global"
    },
    {
      "id": "54e71912-dbc4-4525-95ae-c096ce18e2ff",
      "hash": "iV2s8Z9ALReQj08PKtp8uw==",
      "name": "arista-catalog-config.py",
      "scope": "global"
    },
    {
      "id": "bdcb84df-07e6-4012-acba-40e957cca9d8",
      "hash": "KzVhrsZJJ4XLDEArQbdtyg==",
      "name": "arista-startup-config",
      "scope": "global"
    },
    {
      "id": "ff8db97b-2c6b-462c-bfb8-57e1bb73f503",
      "hash": "aU89dvxpI1B1MBatJ365Ew==",
      "name": "cisco-catalog-version.py",
      "scope": "global"
    },
    {
      "id": "5d665a9e-84e3-48da-85cf-64bb6db0e0e8",
      "hash": "I2zJv8wa4R2V7YZoZeLsUQ==",
      "name": "custom-preseed-16-09-2019-13:13.30",
      "scope": "global"
    },
    {
      "id": "cb27f348-a3f7-4bb7-93f2-47e7f1ae7a9d",
      "hash": "T0lCzRJsigzx2VAtGA2vpQ==",
      "name": "dell-switch-catalog.sh",
      "scope": "global"
    },
    {
      "id": "352c967f-509b-4c86-a185-b0838c7084ea",
      "hash": "Elgk6+zmtJwBI49UEaW2tg==",
      "name": "esx-boot-cfg-tftp",
      "scope": "global"
    },
    {
      "id": "cfe439e5-0838-41a4-855a-5c26afd4275c",
      "hash": "u93Rne/IV4EoquO8xxfr9w==",
      "name": "debian-sources",
      "scope": "global"
    },
    {
      "id": "8bf6a3b9-aec7-4f54-b151-41589837f309",
      "hash": "D6Em2t3PmcKXyVOlcUfKtA==",
      "name": "photon-os.rackhdcallback",
      "scope": "global"
    },
    {
      "id": "7a8cb255-f6b0-44c3-abc8-cd5e572265fb",
      "hash": "98ah5voeTa69r+7aV1kQuw==",
      "name": "post-windows-install.ps1",
      "scope": "global"
    }
  ],
  "workflows": [
    {
      "friendlyName": "Add Hot Spare",
      "injectableName": "Graph.Add.Hotspare",
      "options": {
        "defaults": {
          "username": null,
          "password": null,
          "volumeId": null,
          "driveId": null,
          "hotspareType": "ghs",
          "ipAddress": null
        }
      },
      "tasks": [
        {
          "label": "add-hotspare",
          "taskName": "/api/2.0/workflows/tasks/Task.Add.Hotspare"
        },
        {
          "label": "dell-wsman-get-inventory",
          "waitOn": { "add-hotspare": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        }
      ]
    },
    {
      "friendlyName": "Add Volume",
      "injectableName": "Graph.Add.Volume",
      "options": {
        "defaults": {
          "username": null,
          "password": null,
          "drives": null,
          "raidLevel": null,
          "name": null,
          "sizeInBytes": null,
          "ipAddress": null
        }
      },
      "tasks": [
        {
          "label": "add-volume",
          "taskName": "/api/2.0/workflows/tasks/Task.Add.Volume"
        },
        {
          "label": "dell-wsman-get-inventory",
          "waitOn": { "add-volume": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        }
      ]
    },
    {
      "friendlyName": "Arista Switch ZTP Discovery",
      "injectableName": "Graph.Switch.Discovery.Arista.Ztp",
      "tasks": [
        {
          "label": "catalog-switch",
          "taskDefinition": {
            "friendlyName": "Catalog Arista Switch",
            "injectableName": "Task.Inline.Catalog.Switch.Arista",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": {
              "commands": [
                {
                  "downloadUrl": "{{ api.templates }}/arista-catalog-version.py?nodeId={{ task.nodeId }}",
                  "catalog": { "format": "json", "source": "version" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Boot LiveCD",
      "injectableName": "Graph.BootLiveCD",
      "options": { "install-os": { "_taskTimeout": 3600000 } },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-os",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Boot.LiveCD"
        }
      ]
    },
    {
      "friendlyName": "Bootstrap And Remove BMC Credentials",
      "injectableName": "Graph.Bootstrap.With.BMC.Credentials.Remove",
      "options": {
        "defaults": { "graphOptions": { "target": null }, "nodeId": null }
      },
      "tasks": [
        {
          "label": "boot-graph",
          "taskDefinition": {
            "friendlyName": "Boot Graph",
            "injectableName": "Task.Graph.Run.Boot",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.BootstrapUbuntu",
              "defaults": { "graphOptions": {} }
            },
            "properties": {}
          }
        },
        {
          "label": "remove-bmc-credentials-graph",
          "waitOn": { "boot-graph": "finished" },
          "taskDefinition": {
            "friendlyName": "Run BMC Rmove Credential Graph",
            "injectableName": "Task.Graph.Run.Bmc",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.Remove.Bmc.Credentials",
              "defaults": { "graphOptions": {} }
            },
            "properties": {}
          }
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "remove-bmc-credentials-graph": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        }
      ]
    },
    {
      "friendlyName": "Bootstrap And Set Credentials",
      "injectableName": "Graph.Bootstrap.With.BMC.Credentials.Setup",
      "options": {
        "defaults": { "graphOptions": { "target": null }, "nodeId": null }
      },
      "tasks": [
        {
          "label": "boot-graph",
          "taskDefinition": {
            "friendlyName": "Boot Graph",
            "injectableName": "Task.Graph.Run.Boot",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.BootstrapUbuntu",
              "defaults": { "graphOptions": {} }
            },
            "properties": {}
          }
        },
        {
          "label": "set-bmc-credentials-graph",
          "waitOn": { "boot-graph": "finished" },
          "taskDefinition": {
            "friendlyName": "Run BMC Credential Graph",
            "injectableName": "Task.Graph.Run.Bmc",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.Set.Bmc.Credentials",
              "defaults": { "graphOptions": {} }
            },
            "properties": {}
          }
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "set-bmc-credentials-graph": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        }
      ]
    },
    {
      "friendlyName": "Test decommission of a node",
      "injectableName": "Graph.Bootstrap.Decommission.Node.Test",
      "options": {
        "shell-commands": {
          "commands": [
            {
              "command": "for disk in `lsblk | grep disk | awk '{print $1}'`;                  do sudo sfdisk -d /dev/$disk 2>&1 | grep 'No partitions' -q; done"
            }
          ]
        },
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" },
        "fail-command": { "makeItFail": "false", "when": "false" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "shell-commands",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Commands"
        },
        {
          "label": "reboot-after-shell-commands",
          "waitOn": { "shell-commands": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "send-finish",
          "waitOn": {
            "reboot-after-shell-commands": "finished",
            "shell-commands": "succeeded"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        },
        {
          "label": "fail-command",
          "waitOn": {
            "reboot-after-shell-commands": "finished",
            "shell-commands": "failed"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        }
      ]
    },
    {
      "friendlyName": "DEBUG Bootstrap Rancher",
      "injectableName": "Graph.BootstrapRancher",
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        }
      ]
    },
    {
      "friendlyName": "DEBUG Bootstrap Ubuntu",
      "injectableName": "Graph.BootstrapUbuntu",
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-ubuntu",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Ubuntu"
        }
      ]
    },
    {
      "friendlyName": "Clear the System Event Log",
      "injectableName": "Graph.ClearSEL.Node",
      "tasks": [
        {
          "label": "clearsel",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.ClearSEL"
        }
      ]
    },
    {
      "friendlyName": "Bootstrap and Decommission a node",
      "injectableName": "Graph.Bootstrap.Decommission.Node",
      "options": {
        "shell-commands": {
          "commands": [
            {
              "command": "for disk in `lsblk | grep disk | awk '{print $1}'`;                  do sudo sgdisk --zap-all /dev/$disk ; done"
            }
          ]
        },
        "when-secure-erase": {
          "useSecureErase": "false",
          "when": "{{options.useSecureErase}}"
        },
        "remove-bmc-credentials": { "users": null },
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "catalog-megaraid",
          "waitOn": { "bootstrap-rancher": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-driveid",
          "waitOn": { "catalog-megaraid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "remove-bmc-credentials",
          "waitOn": { "catalog-driveid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Remove.BMC.Credentials"
        },
        {
          "label": "when-secure-erase",
          "waitOn": { "remove-bmc-credentials": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "shell-commands",
          "waitOn": { "when-secure-erase": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Commands"
        },
        {
          "label": "drive-secure-erase",
          "waitOn": { "when-secure-erase": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Drive.SecureErase"
        },
        {
          "label": "post-catalog-megaraid",
          "waitOn": {
            "drive-secure-erase": "finished",
            "when-secure-erase": "succeeded"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "post-catalog-driveid",
          "waitOn": {
            "drive-secure-erase": "finished",
            "when-secure-erase": "succeeded"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "reboot-after-shell-commands",
          "waitOn": {
            "shell-commands": "finished",
            "when-secure-erase": "failed"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "reboot-after-drive-secure-erase",
          "waitOn": {
            "drive-secure-erase": "finished",
            "when-secure-erase": "succeeded"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "finish-after-shell-commands",
          "waitOn": {
            "shell-commands": "finished",
            "when-secure-erase": "failed"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        },
        {
          "label": "finish-after-drive-secure-erase",
          "waitOn": {
            "drive-secure-erase": "finished",
            "when-secure-erase": "succeeded"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        }
      ]
    },
    {
      "friendlyName": "Configure Megaraid Controler",
      "injectableName": "Graph.Bootstrap.Megaraid.Configure",
      "options": {
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" },
        "config-raid": {
          "hddArr": null,
          "ssdStoragePoolArr": null,
          "ssdCacheCadeArr": null,
          "path": null,
          "controller": null
        }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "config-raid",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Config.Megaraid"
        },
        {
          "label": "refresh-catalog-megaraid",
          "waitOn": { "config-raid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "refresh-catalog-driveid",
          "waitOn": { "refresh-catalog-megaraid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "refresh-catalog-lsall",
          "waitOn": { "refresh-catalog-driveid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.lsall"
        },
        {
          "label": "final-reboot",
          "waitOn": { "refresh-catalog-lsall": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Brocade Switch Discovery",
      "injectableName": "Graph.Switch.Discovery.Brocade.Ztp",
      "tasks": [
        {
          "label": "catalog-brocade-switch",
          "taskDefinition": {
            "friendlyName": "Catalog Brocade Switch",
            "injectableName": "Task.Inline.Catalog.Switch.Brocade",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": {
              "commands": [
                {
                  "downloadUrl": "{{ api.templates }}/brocade-catalog-version.py?nodeId={{ task.nodeId }}",
                  "catalog": { "format": "json", "source": "version" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Cisco Switch POAP Discovery",
      "injectableName": "Graph.Switch.Discovery.Cisco.Poap",
      "tasks": [
        {
          "label": "catalog-switch",
          "taskDefinition": {
            "friendlyName": "Catalog Cisco Switch",
            "injectableName": "Task.Inline.Catalog.Switch.Cisco",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": {
              "commands": [
                {
                  "downloadUrl": "{{ api.templates }}/cisco-catalog-version.py?nodeId={{ task.nodeId }}",
                  "catalog": { "format": "json", "source": "version" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Create Emc FabricService Pollers",
      "injectableName": "Graph.Emc.Redfish.FabricService.Poller.Create",
      "options": {
        "defaults": {
          "nodeId": null,
          "pollers": [
            {
              "type": "redfish",
              "pollInterval": 10000,
              "config": { "command": "fabricservice" }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "create-redfish-pollers",
          "taskName": "/api/2.0/workflows/tasks/Task.Pollers.CreateDefault"
        }
      ]
    },
    {
      "friendlyName": "Create IPMI OBM Settings",
      "injectableName": "Graph.Obm.Ipmi.CreateSettings",
      "tasks": [
        {
          "label": "create-ipmi-obm-settings",
          "taskDefinition": {
            "friendlyName": "Create IPMI OBM settings",
            "injectableName": "Task.Obm.Ipmi.CreateSettings",
            "implementsTask": "Task.Base.Obm.Ipmi.CreateSettings",
            "options": { "ipmichannel": null, "user": null, "password": null },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Create RAID via Storcli",
      "injectableName": "Graph.Raid.Create.MegaRAID",
      "options": {
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "create-raid",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Raid.Create.MegaRAID"
        },
        {
          "label": "refresh-catalog-megaraid",
          "waitOn": { "create-raid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "final-reboot",
          "waitOn": { "refresh-catalog-megaraid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Create Redfish Chassis Pollers",
      "injectableName": "Graph.Redfish.Chassis.Poller.Create",
      "options": {
        "defaults": {
          "nodeId": null,
          "pollers": [
            {
              "type": "redfish",
              "pollInterval": 10000,
              "config": { "command": "thermal" }
            },
            {
              "type": "redfish",
              "pollInterval": 10000,
              "config": { "command": "power" }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "create-redfish-pollers",
          "taskName": "/api/2.0/workflows/tasks/Task.Pollers.Redfish.CreateDefault"
        }
      ]
    },
    {
      "friendlyName": "Create Redfish Managers Pollers",
      "injectableName": "Graph.Redfish.Managers.Poller.Create",
      "options": {
        "defaults": {
          "nodeId": null,
          "pollers": [
            {
              "type": "redfish",
              "pollInterval": 10000,
              "config": { "command": "managers.logservices" }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "create-redfish-pollers",
          "taskName": "/api/2.0/workflows/tasks/Task.Pollers.CreateDefault"
        }
      ]
    },
    {
      "friendlyName": "Create Redfish Systems Pollers",
      "injectableName": "Graph.Redfish.Systems.Poller.Create",
      "options": {
        "defaults": {
          "nodeId": null,
          "pollers": [
            {
              "type": "redfish",
              "pollInterval": 10000,
              "config": { "command": "systems.logservices" }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "create-redfish-pollers",
          "taskName": "/api/2.0/workflows/tasks/Task.Pollers.CreateDefault"
        }
      ]
    },
    {
      "friendlyName": "Create VirtualBox OBM Settings",
      "injectableName": "Graph.Obm.Vbox.CreateSettings",
      "tasks": [
        {
          "label": "create-vbox-obm-settings",
          "taskDefinition": {
            "friendlyName": "Create VirtualBox OBM settings",
            "injectableName": "Task.Obm.Vbox.CreateSettings",
            "implementsTask": "Task.Base.Obm.CreateSettings",
            "options": { "service": "vbox-obm-service", "config": {} },
            "properties": { "obm": { "type": "virtualbox" } }
          }
        }
      ]
    },
    {
      "friendlyName": "Delete RAID via Storcli",
      "injectableName": "Graph.Raid.Delete.MegaRAID",
      "options": {
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "delete-raid",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Raid.Delete.MegaRAID"
        },
        {
          "label": "refresh-catalog-megaraid",
          "waitOn": { "delete-raid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "final-reboot",
          "waitOn": { "refresh-catalog-megaraid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Delete Volume",
      "injectableName": "Graph.Delete.Volume",
      "options": {
        "defaults": {
          "username": null,
          "password": null,
          "volumeId": null,
          "ipAddress": null
        }
      },
      "tasks": [
        {
          "label": "delete-volume",
          "taskName": "/api/2.0/workflows/tasks/Task.Delete.Volume"
        },
        {
          "label": "dell-wsman-get-inventory",
          "waitOn": { "delete-volume": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        }
      ]
    },
    {
      "friendlyName": "Configure Dell Idrac",
      "injectableName": "Graph.Dell.Configure.Idrac",
      "options": {
        "set-iDRAC-ip": {
          "action": "setIdracIP",
          "ip": null,
          "netMask": null,
          "gateway": null
        }
      },
      "tasks": [
        {
          "label": "set-iDRAC-ip",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.Control"
        }
      ]
    },
    {
      "friendlyName": "Configure Dell Redfish Alerting",
      "injectableName": "Graph.Dell.Configure.Redfish.Alerting",
      "options": { "redfish-subscription": { "redfishEndpointIp": null } },
      "tasks": [
        {
          "label": "enable-alerting",
          "taskDefinition": {
            "friendlyName": "Enable Dell Alerting",
            "injectableName": "Task.Dell.Enable.Alerts",
            "implementsTask": "Task.Base.Dell.Racadm.Control",
            "options": { "action": "enableAlert" },
            "properties": {}
          }
        },
        {
          "label": "enable-redfish-alerts",
          "waitOn": { "enable-alerting": "finished" },
          "taskDefinition": {
            "friendlyName": "Enable Redfish Alerting",
            "injectableName": "Task.Dell.Enable.Redfish.Alert",
            "implementsTask": "Task.Base.Dell.Racadm.Control",
            "options": { "action": "enableRedfish" },
            "properties": {}
          }
        },
        {
          "label": "disable-redfish-alerts",
          "waitOn": { "enable-redfish-alerts": "finished" },
          "taskDefinition": {
            "friendlyName": "Disable Redfish Alerting",
            "injectableName": "Task.Dell.Disable.Redfish.Alert",
            "implementsTask": "Task.Base.Dell.Racadm.Control",
            "options": { "action": "disableRedfish" },
            "properties": {}
          }
        },
        {
          "label": "redfish-subscription",
          "waitOn": { "disable-redfish-alerts": "finished" },
          "taskDefinition": {
            "friendlyName": "Subscribe  To Redfish Alerting",
            "injectableName": "Task.Dell.Subscribe.Redfish.Alert",
            "implementsTask": "Task.Base.Redfish.Alert.Enable",
            "options": {
              "url": null,
              "credential": { "username": null, "password": null },
              "data": {}
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Dell Switch Onie Discovery",
      "injectableName": "Graph.Switch.Discovery.Dell.Onie",
      "tasks": [
        {
          "label": "catalog-switch",
          "taskDefinition": {
            "friendlyName": "Catalog Dell Switch",
            "injectableName": "Task.Inline.Catalog.Switch.Dell",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": {
              "commands": [
                {
                  "downloadUrl": "{{ api.templates }}/dell-switch-onie-catalog.sh?nodeId={{ task.nodeId }}",
                  "catalog": { "format": "json", "source": "onieSysinfo" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Create RAID via perccli",
      "injectableName": "Graph.Raid.Create.Perccli",
      "options": {
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" },
        "config-raid": {
          "hddArr": null,
          "ssdStoragePoolArr": null,
          "ssdCacheCadeArr": null,
          "path": null,
          "controller": null
        }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "config-raid",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Config.Megaraid"
        },
        {
          "label": "refresh-catalog-megaraid",
          "waitOn": { "config-raid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.perccli"
        },
        {
          "label": "refresh-catalog-driveid",
          "waitOn": { "refresh-catalog-megaraid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "refresh-catalog-lsall",
          "waitOn": { "refresh-catalog-driveid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.lsall"
        },
        {
          "label": "final-reboot",
          "waitOn": { "refresh-catalog-lsall": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Dell perccli Catalog",
      "injectableName": "Graph.Dell.perccli.Catalog",
      "options": {
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "catalog-perccli",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.perccli"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-perccli": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Disable VTx Graph",
      "injectableName": "Graph.Dell.Disable.VTx",
      "options": {
        "dell-racadm-disable-VTx": {
          "forceReboot": true,
          "serverUsername": null,
          "serverPassword": null,
          "serverFilePath": null,
          "action": "disableVTx"
        },
        "when-require-refresh-catalog": {
          "refresh": "true",
          "when": "{{options.refresh}}"
        }
      },
      "tasks": [
        {
          "label": "dell-racadm-disable-VTx",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.Control"
        },
        {
          "label": "when-require-refresh-catalog",
          "waitOn": { "dell-racadm-disable-VTx": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "refresh-racadm-catalog",
          "waitOn": { "when-require-refresh-catalog": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.GetConfigCatalog"
        },
        {
          "label": "noop",
          "waitOn": { "when-require-refresh-catalog": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Enable VTx Graph",
      "injectableName": "Graph.Dell.Enable.VTx",
      "options": {
        "dell-racadm-enable-VTx": {
          "forceReboot": true,
          "serverUsername": null,
          "serverPassword": null,
          "serverFilePath": null,
          "action": "enableVTx"
        },
        "when-require-refresh-catalog": {
          "refresh": "true",
          "when": "{{options.refresh}}"
        }
      },
      "tasks": [
        {
          "label": "dell-racadm-enable-VTx",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.Control"
        },
        {
          "label": "when-require-refresh-catalog",
          "waitOn": { "dell-racadm-enable-VTx": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "refresh-racadm-catalog",
          "waitOn": { "when-require-refresh-catalog": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.GetConfigCatalog"
        },
        {
          "label": "noop",
          "waitOn": { "when-require-refresh-catalog": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Get BIOS Graph",
      "injectableName": "Graph.Dell.Racadm.GetBIOS",
      "options": {
        "defaults": {
          "serverUsername": null,
          "serverPassword": null,
          "serverFilePath": null
        }
      },
      "tasks": [
        {
          "label": "dell-racadm-get-bios",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.GetBIOS"
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Get Config Catalog Graph",
      "injectableName": "Graph.Dell.Racadm.GetConfigCatalog",
      "tasks": [
        {
          "label": "dell-racadm-get-config-catalog",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.GetConfigCatalog"
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Get Firmware List Catalog Graph",
      "injectableName": "Graph.Dell.Racadm.GetFirmwareListCatalog",
      "options": {
        "dell-racadm-get-firmware-list-catalog": {
          "updateExistingCatalog": true
        }
      },
      "tasks": [
        {
          "label": "dell-racadm-get-firmware-list-catalog",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.GetFirmwareListCatalog"
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Reset Components Graph",
      "injectableName": "Graph.Dell.Racadm.ResetComponents",
      "options": { "defaults": { "components": [] } },
      "tasks": [
        {
          "label": "dell-racadm-Reset-Components",
          "taskDefinition": {
            "friendlyName": "dell racadm reset components",
            "injectableName": "Task.Dell.Racadm.ResetComponents",
            "implementsTask": "Task.Base.Dell.Racadm.Control",
            "options": { "action": "resetComponents" },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Set BIOS Graph",
      "injectableName": "Graph.Dell.Racadm.SetBIOS",
      "options": {
        "defaults": {
          "serverUsername": null,
          "serverPassword": null,
          "serverFilePath": null
        }
      },
      "tasks": [
        {
          "label": "dell-racadm-set-bios",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.SetBIOS"
        }
      ]
    },
    {
      "friendlyName": "Dell Racadm Update Firmware Graph",
      "injectableName": "Graph.Dell.Racadm.Update.Firmware",
      "options": {
        "defaults": {
          "serverUsername": null,
          "serverPassword": null,
          "serverFilePath": null
        },
        "dell-racadm-get-firmware-list-catalog": {
          "updateExistingCatalog": true
        },
        "catalog-dmi": { "updateExistingCatalog": true },
        "catalog-bmc": { "updateExistingCatalog": true }
      },
      "tasks": [
        {
          "label": "download-http-file",
          "taskName": "/api/2.0/workflows/tasks/Task.Download.Http.File"
        },
        {
          "label": "dell-racadm-update-firmware",
          "waitOn": { "download-http-file": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.Update.Firmware"
        },
        {
          "label": "set-boot-pxe",
          "waitOn": { "dell-racadm-update-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "dell-racadm-get-firmware-list-catalog",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Racadm.GetFirmwareListCatalog"
        },
        {
          "label": "catalog-dmi",
          "waitOn": { "dell-racadm-get-firmware-list-catalog": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.dmi"
        },
        {
          "label": "catalog-bmc",
          "waitOn": { "catalog-dmi": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        }
      ]
    },
    {
      "friendlyName": "Dell Switch configuration",
      "injectableName": "Graph.Switch.Dell.Configuration",
      "tasks": [
        {
          "label": "config-switch",
          "taskDefinition": {
            "friendlyName": "Dell Switch configuration",
            "injectableName": "Task.Inline.Switch.Dell.Configuration",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": {
              "mgmtPort": "1/1",
              "username": "rackhd",
              "userPassword": "RackHDRocks1!",
              "adminPassword": "RackHDRocks1!",
              "hostname": "rackhd",
              "ipAddr": "dhcp",
              "commands": [
                {
                  "downloadUrl": "{{ api.templates }}/dell-switch-basic-config.exp?nodeId={{ task.nodeId }}"
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Dell Switch Bmp Discovery",
      "injectableName": "Graph.Switch.Discovery.Dell.Bmp",
      "tasks": [
        {
          "label": "catalog-switch",
          "taskDefinition": {
            "friendlyName": "Catalog Dell Switch",
            "injectableName": "Task.Inline.Catalog.Switch.Dell",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": {
              "commands": [
                {
                  "downloadUrl": "{{ api.templates }}/dell-switch-catalog.sh?nodeId={{ task.nodeId }}",
                  "catalog": { "format": "json", "source": "sysinfo" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Dell Switch Nos installation",
      "injectableName": "Graph.Switch.Dell.Nos.Install",
      "tasks": [
        {
          "label": "install-os",
          "taskDefinition": {
            "friendlyName": "Dell Switch Nos install",
            "injectableName": "Task.Inline.Switch.Dell.Nos.Install",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": {
              "nosImageUri": "{{ file.server }}/PKGS_OS10-Enterprise-10.3.1E.121-installer-x86_64.bin",
              "commands": [
                {
                  "downloadUrl": "{{ api.templates }}/dell-switch-nos-install.sh?nodeId={{ task.nodeId }}"
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Add Hotspare",
      "injectableName": "Graph.Dell.Wsman.Add.Hotspare",
      "options": {
        "defaults": {
          "username": null,
          "password": null,
          "volumeId": null,
          "hotspareType": "ghs",
          "ipAddress": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-add-hotspare-getXml",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Add.Hotspare.GetXml"
        },
        {
          "label": "dell-wsman-add-hotspare-updateXml",
          "waitOn": { "dell-wsman-add-hotspare-getXml": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Add.Hotspare.UpdateXml"
        },
        {
          "label": "dell-wsman-RAID",
          "waitOn": { "dell-wsman-add-hotspare-updateXml": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.RAID"
        },
        {
          "label": "dell-wsman-get-inventory",
          "waitOn": { "dell-wsman-RAID": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Add Volume",
      "injectableName": "Graph.Dell.Wsman.Add.Volume",
      "options": {
        "defaults": {
          "enable": null,
          "raidLevel": 0,
          "stripeSize": 128,
          "writePolicy": "WriteBack",
          "shutdownType": 0,
          "verifySSL": false,
          "_taskTimeout": 900000,
          "domain": "wsman",
          "removeXmlFile": true,
          "ipAddress": "",
          "username": "",
          "password": ""
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-add-volume-getXml",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Add.Volume.getXml"
        },
        {
          "label": "dell-wsman-add-volume-updateXml",
          "waitOn": { "dell-wsman-add-volume-getXml": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Add.Volume.UpdateXml"
        },
        {
          "label": "dell-wsman-RAID",
          "waitOn": { "dell-wsman-add-volume-updateXml": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.RAID"
        },
        {
          "label": "dell-wsman-get-inventory",
          "waitOn": { "dell-wsman-RAID": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Config Services",
      "injectableName": "Graph.Dell.Wsman.ConfigServices",
      "options": { "defaults": { "configServer": "http://127.0.0.1:9600" } },
      "tasks": [
        {
          "label": "dell-wsman-config-services",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Config.Services"
        }
      ]
    },
    {
      "friendlyName": "Dell WSMAN Configure BIOS",
      "injectableName": "Graph.Dell.Wsman.ConfigureBios",
      "options": {
        "defaults": {
          "attributes": null,
          "biosBootSequenceOrder": [""],
          "hddSequenceOrder": [""],
          "enableBootDevices": [""],
          "disableBootDevices": [""],
          "rebootJobType": 1
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-configure-bios",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.ConfigureBios"
        },
        {
          "label": "dell-wsman-get-bios",
          "waitOn": { "dell-wsman-configure-bios": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetBios"
        }
      ]
    },
    {
      "friendlyName": "Configure Dell Idrac using WSMAN",
      "injectableName": "Graph.Dell.Wsman.Configure.Idrac",
      "options": {
        "defaults": { "address": null, "netmask": null, "gateway": null },
        "dell-wsman-update-systemcomponents": {
          "serverComponents": [
            {
              "fqdd": "{{ context.outputs[\"dell-wsman-configure-idrac\"].fqdd }}",
              "attributes": [
                {
                  "name": "IPv4Static.1#Netmask",
                  "value": "{{ context.outputs[\"dell-wsman-configure-idrac\"].netmask }}"
                },
                {
                  "name": "IPv4Static.1#Gateway",
                  "value": "{{ context.outputs[\"dell-wsman-configure-idrac\"].gateway }}"
                },
                {
                  "name": "IPv4Static.1#Address",
                  "value": "{{ context.outputs[\"dell-wsman-configure-idrac\"].address }}"
                }
              ]
            }
          ],
          "shutdownType": 0,
          "forceUpdate": true
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-get-inventory",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        },
        {
          "label": "dell-wsman-configure-idrac",
          "waitOn": { "dell-wsman-get-inventory": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.configure.Idrac"
        },
        {
          "label": "dell-wsman-update-systemcomponents",
          "waitOn": { "dell-wsman-configure-idrac": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.UpdateSystemConfigComponents"
        }
      ]
    },
    {
      "friendlyName": "Configure Dell Redfish Alert using WSMAN",
      "injectableName": "Graph.Dell.Wsman.Configure.Redfish.Alert",
      "options": {
        "dell-wsman-configure-redfish-alert": {
          "shutdownType": 0,
          "forceUpdate": true
        },
        "redfish-subscription": { "redfishEndpointIp": null }
      },
      "tasks": [
        {
          "label": "dell-wsman-get-systemcomponents",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetSystemConfigComponents"
        },
        {
          "label": "dell-wsman-configure-redfish-alert",
          "waitOn": { "dell-wsman-get-systemcomponents": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Configure.Redfish.Alert"
        },
        {
          "label": "redfish-subscription",
          "waitOn": { "dell-wsman-configure-redfish-alert": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Subscribe  To Redfish Alerting",
            "injectableName": "Task.Dell.Subscribe.Redfish.Alert",
            "implementsTask": "Task.Base.Redfish.Alert.Enable",
            "options": {
              "url": null,
              "credential": { "username": null, "password": null },
              "data": {}
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Dell WSMAN Create Firmware Repo Graph",
      "injectableName": "Graph.Dell.Wsman.Create.Repo",
      "options": {
        "defaults": {
          "catalogFilePath": null,
          "targetFilePath": null,
          "updates": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-create-repo",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Create.Repo"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Delete Volume",
      "injectableName": "Graph.Dell.Wsman.Delete.Volume",
      "options": {
        "defaults": {
          "enable": null,
          "shutdownType": 0,
          "verifySSL": false,
          "_taskTimeout": 900000,
          "domain": "wsman",
          "removeXmlFile": true,
          "ipAddress": "",
          "username": "",
          "password": ""
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-delete-volume-getXml",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Delete.Volume.GetXml"
        },
        {
          "label": "dell-wsman-delete-volume-updateXml",
          "waitOn": { "dell-wsman-delete-volume-getXml": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Delete.Volume.UpdateXml"
        },
        {
          "label": "dell-wsman-RAID",
          "waitOn": { "dell-wsman-delete-volume-updateXml": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.RAID"
        },
        {
          "label": "dell-wsman-get-inventory",
          "waitOn": { "dell-wsman-RAID": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Discovery",
      "injectableName": "Graph.Dell.Wsman.Discovery",
      "options": {
        "defaults": {
          "ranges": [],
          "inventory": false,
          "deviceTypesToDiscover": []
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-discovery",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Discovery"
        }
      ]
    },
    {
      "friendlyName": "Dell WSMAN Downlaod Catalog Graph",
      "injectableName": "Graph.Dell.Wsman.Download.Catalog",
      "options": {
        "defaults": {
          "fileName": null,
          "fileURL": null,
          "targetLocation": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-downaload-catalog",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Download.Catalog"
        }
      ]
    },
    {
      "friendlyName": "Dell WSMAN Export SCP",
      "injectableName": "Graph.Dell.Wsman.Export.SCP",
      "options": {
        "defaults": {
          "serverIP": null,
          "serverUsername": null,
          "serverPassword": null,
          "shareType": null,
          "shareAddress": null,
          "shareName": null,
          "fileName": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-export-scp",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Export.SCP"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Get Bios",
      "injectableName": "Graph.Dell.Wsman.GetBios",
      "options": {},
      "tasks": [
        {
          "label": "dell-wsman-get-bios",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetBios"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Get Inventory",
      "injectableName": "Graph.Dell.Wsman.GetInventory",
      "options": { "defaults": { "callback": true } },
      "tasks": [
        {
          "label": "dell-wsman-get-inventory",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        }
      ]
    },
    {
      "friendlyName": "Dell WSMAN Get System Configuration Components Catalog Graph",
      "injectableName": "Graph.Dell.Wsman.GetSystemComponentsCatalog",
      "options": { "defaults": { "shutdownType": 0, "componentNames": [] } },
      "tasks": [
        {
          "label": "dell-wsman-get-systemcomponents",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetSystemConfigComponents"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Get Trap Config",
      "injectableName": "Graph.Dell.Wsman.GetTrapConfig",
      "options": { "defaults": { "target": null } },
      "tasks": [
        {
          "label": "dell-wsman-get-trap-config",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetTrapConfig"
        }
      ]
    },
    {
      "friendlyName": "Dell WSMAN Import SCP",
      "injectableName": "Graph.Dell.Wsman.Import.SCP",
      "options": {
        "defaults": {
          "serverIP": null,
          "serverUsername": null,
          "serverPassword": null,
          "shareType": null,
          "shareAddress": null,
          "shareName": null,
          "fileName": null,
          "shutdownType": null,
          "componentNames": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-import-scp",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Import.SCP"
        }
      ]
    },
    {
      "friendlyName": "Dell wsman OS Deployment Create ISO Graph",
      "injectableName": "Graph.Dell.Wsman.Os.Create",
      "options": {
        "defaults": {
          "destinationDir": null,
          "destinationFileName": null,
          "fileName": null,
          "kickStartFileName": null,
          "ksLocation": null,
          "shareAddress": null,
          "sourceDir": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-os-create",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Os.Create"
        }
      ]
    },
    {
      "friendlyName": "Dell wsman OS Deploy ISO Graph",
      "injectableName": "Graph.Dell.Wsman.Os.Deploy",
      "options": {
        "defaults": {
          "hypervisorType": null,
          "hypervisorVersion": null,
          "isoFileShare": {
            "address": null,
            "description": null,
            "fileName": null,
            "name": null,
            "path": null,
            "scriptDirectory": null,
            "scriptName": null,
            "type": null,
            "passwordCredential": {
              "domain": null,
              "password": null,
              "username": null
            }
          },
          "serverAddress": null,
          "userName": null,
          "password": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-os-deploy",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Os.Deploy"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman PostDiscovery",
      "injectableName": "Graph.Dell.Wsman.PostDiscovery",
      "options": {
        "defaults": {
          "data": null,
          "credentials": { "user": null, "password": null }
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-get-inventory",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        },
        {
          "label": "dell-wsman-get-bios",
          "waitOn": { "dell-wsman-get-inventory": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetBios"
        },
        {
          "label": "update-lookups",
          "waitOn": { "dell-wsman-get-bios": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wsman.Update.Lookups"
        },
        {
          "label": "create-wsman-pollers",
          "waitOn": { "update-lookups": "finished" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "wsman",
                  "pollInterval": 30000,
                  "config": { "command": "powerthermal" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Dell wsman PowerThermal Graph",
      "injectableName": "Graph.Dell.Wsman.Powerthermal",
      "options": { "defaults": { "powerCap": null, "enableCapping": null } },
      "tasks": [
        {
          "label": "dell-wsman-powerthermal-capping",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Powerthermal"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Reset Components Graph",
      "injectableName": "Graph.Dell.Wsman.Reset.Components",
      "options": { "defaults": { "components": null } },
      "tasks": [
        {
          "label": "dell-wsman-reset-components",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Reset.Components"
        }
      ]
    },
    {
      "friendlyName": "Dell Wsman Simple Update Firmware Graph",
      "injectableName": "Graph.Dell.Wsman.Simple.Update.Firmware",
      "options": { "defaults": { "imageURI": null } },
      "tasks": [
        {
          "label": "dell-wsman-simple-update-firmware",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Simple.Update.Firmware"
        }
      ]
    },
    {
      "friendlyName": "Dell wsman Update Firmware Graph",
      "injectableName": "Graph.Dell.Wsman.Update.Firmware",
      "options": {
        "dell-wsman-update-firmware": { "shareFolderAddress": null }
      },
      "tasks": [
        {
          "label": "dell-wsman-update-firmware",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.Update.Firmware"
        }
      ]
    },
    {
      "friendlyName": "Dell WSMAN Update System Configuration Components",
      "injectableName": "Graph.Dell.Wsman.UpdateSystemComponents",
      "options": {
        "defaults": {
          "serverIP": null,
          "serverUsername": null,
          "serverPassword": null,
          "shareType": null,
          "shareAddress": null,
          "shareName": null,
          "fileName": null,
          "shutdownType": null,
          "serverComponents": null,
          "cleanup": null,
          "forceUpdate": null
        }
      },
      "tasks": [
        {
          "label": "dell-wsman-update-systemcomponents",
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.UpdateSystemConfigComponents"
        },
        {
          "label": "dell-wsman-get-inventory",
          "waitOn": { "dell-wsman-update-systemcomponents": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetInventory"
        },
        {
          "label": "dell-wsman-get-bios",
          "waitOn": { "dell-wsman-get-inventory": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Dell.Wsman.GetBios"
        },
        {
          "label": "create-wsman-pollers",
          "waitOn": { "dell-wsman-get-bios": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "wsman",
                  "pollInterval": 30000,
                  "config": { "command": "powerthermal" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Discovery",
      "injectableName": "Graph.Discovery",
      "options": {
        "bootstrap-ubuntu": { "triggerGroup": "bootstrap" },
        "finish-bootstrap-trigger": { "triggerGroup": "bootstrap" },
        "skip-reboot-post-discovery": {
          "skipReboot": "false",
          "when": "{{options.skipReboot}}"
        }
      },
      "tasks": [
        {
          "label": "bootstrap-ubuntu",
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Ubuntu"
        },
        {
          "label": "catalog-dmi",
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.dmi"
        },
        {
          "label": "catalog-ohai",
          "waitOn": { "catalog-dmi": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ohai"
        },
        {
          "label": "catalog-bmc",
          "waitOn": { "catalog-ohai": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "set-interfaces",
          "waitOn": { "catalog-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Set.Interfaces"
        },
        {
          "label": "catalog-lsall",
          "waitOn": { "set-interfaces": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.lsall"
        },
        {
          "label": "catalog-megaraid",
          "waitOn": { "catalog-lsall": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-smart",
          "waitOn": { "catalog-megaraid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.smart"
        },
        {
          "label": "catalog-driveid",
          "waitOn": { "catalog-smart": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "catalog-lldp",
          "waitOn": { "catalog-driveid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.LLDP"
        },
        {
          "label": "set-boot-pxe",
          "waitOn": { "catalog-lldp": "finished" },
          "taskDefinition": {
            "friendlyName": "Set PXE boot",
            "injectableName": "Task.Node.PxeBoot",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": { "commands": "sudo ipmitool chassis bootdev pxe" },
            "properties": {}
          }
        },
        {
          "label": "skip-reboot-post-discovery",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "skip-reboot-post-discovery": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "noop",
          "waitOn": { "skip-reboot-post-discovery": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        },
        {
          "label": "node-discovered-alert",
          "waitOn": { "finish-bootstrap-trigger": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Alert.Node.Discovered"
        }
      ]
    },
    {
      "friendlyName": "Mgmt Discovery",
      "injectableName": "Graph.Mgmt.Discovery",
      "tasks": [
        {
          "label": "catalog-mgmt-bmc",
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Mgmt.bmc"
        },
        {
          "label": "catalog-mgmt-lldp",
          "waitOn": { "catalog-mgmt-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Local.LLDP"
        },
        {
          "label": "catalog-mgmt-dmi",
          "waitOn": { "catalog-mgmt-lldp": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Local.DMI"
        },
        {
          "label": "node-discovered-alert",
          "waitOn": { "catalog-mgmt-dmi": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Alert.Node.Discovered"
        }
      ]
    },
    {
      "friendlyName": "MgmtSKU Discovery",
      "injectableName": "Graph.MgmtSKU.Discovery",
      "options": {
        "defaults": {
          "graphOptions": { "target": null },
          "nodeId": null,
          "nodeIds": ["{{ options.nodeId }}"]
        }
      },
      "tasks": [
        {
          "label": "discovery-mgmt-graph",
          "taskDefinition": {
            "friendlyName": "Run Discovery Graph",
            "injectableName": "Task.Graph.Run.Discovery",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.Mgmt.Discovery",
              "graphOptions": {}
            },
            "properties": {}
          }
        },
        {
          "label": "generate-mgmt-sku",
          "waitOn": { "discovery-mgmt-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-mgmt-tag",
          "waitOn": { "discovery-mgmt-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateTag"
        },
        {
          "label": "generate-enclosure",
          "waitOn": { "discovery-mgmt-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateEnclosure"
        },
        {
          "label": "create-mgmt-default-pollers",
          "waitOn": { "discovery-mgmt-graph": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sdr" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selInformation" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sel" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 15000,
                  "config": { "command": "chassis" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 30000,
                  "config": { "command": "driveHealth" }
                }
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "run-mgmtsku-graph",
          "waitOn": { "generate-mgmt-sku": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run SKU-specific graph",
            "injectableName": "Task.Graph.Run.SkuSpecific",
            "implementsTask": "Task.Base.Graph.RunSku",
            "options": {},
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Redfish System Discovery",
      "injectableName": "Graph.Redfish.System.Discovery",
      "options": {
        "bootstrap-rancher": {
          "triggerGroup": "bootstrap",
          "kargs": { "acpi": "off" }
        },
        "finish-bootstrap-trigger": { "triggerGroup": "bootstrap" },
        "reboot-start": {
          "obmServiceName": "redfish-obm-service",
          "force": true
        }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "catalog-dmi",
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.dmi"
        },
        {
          "label": "catalog-ohai",
          "waitOn": { "catalog-dmi": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ohai"
        },
        {
          "label": "catalog-bmc",
          "waitOn": { "catalog-ohai": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "catalog-lsall",
          "waitOn": { "catalog-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.lsall"
        },
        {
          "label": "catalog-megaraid",
          "waitOn": { "catalog-lsall": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-smart",
          "waitOn": { "catalog-megaraid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.smart"
        },
        {
          "label": "catalog-driveid",
          "waitOn": { "catalog-smart": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "catalog-lldp",
          "waitOn": { "catalog-driveid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.LLDP"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-lldp": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "shell-reboot": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        },
        {
          "label": "node-discovered-alert",
          "waitOn": { "finish-bootstrap-trigger": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Alert.Node.Discovered"
        }
      ]
    },
    {
      "friendlyName": "Refresh node delayed",
      "injectableName": "Graph.Refresh.Delayed.Discovery",
      "options": {
        "discovery-refresh-graph": {
          "graphOptions": { "target": null },
          "nodeId": null
        },
        "generate-sku": { "nodeId": null },
        "generate-enclosure": { "nodeId": null },
        "create-default-pollers": { "nodeId": null },
        "run-sku-graph": { "nodeId": null },
        "nodeId": null
      },
      "tasks": [
        {
          "label": "discovery-refresh-graph",
          "taskDefinition": {
            "friendlyName": "Run Discovery Refresh Graph",
            "injectableName": "Task.Graph.Run.Discovery",
            "implementsTask": "Task.Base.Graph.Run",
            "options": { "graphName": "Graph.Discovery", "graphOptions": {} },
            "properties": {}
          }
        },
        {
          "label": "generate-sku",
          "waitOn": { "discovery-refresh-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-enclosure",
          "waitOn": { "discovery-refresh-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateEnclosure"
        },
        {
          "label": "create-default-pollers",
          "waitOn": { "discovery-refresh-graph": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sdr" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selInformation" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sel" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selEntries" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 15000,
                  "config": { "command": "chassis" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 30000,
                  "config": { "command": "driveHealth" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Refresh node immediate",
      "injectableName": "Graph.Refresh.Immediate.Discovery",
      "options": {
        "reset-at-start": { "nodeId": null },
        "discovery-refresh-graph": {
          "graphOptions": { "target": null },
          "nodeId": null
        },
        "generate-sku": { "nodeId": null },
        "generate-enclosure": { "nodeId": null },
        "create-default-pollers": { "nodeId": null },
        "run-sku-graph": { "nodeId": null },
        "nodeId": null
      },
      "tasks": [
        {
          "label": "reset-at-start",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reset"
        },
        {
          "label": "discovery-refresh-graph",
          "waitOn": { "reset-at-start": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run Discovery Refresh Graph",
            "injectableName": "Task.Graph.Run.Discovery",
            "implementsTask": "Task.Base.Graph.Run",
            "options": { "graphName": "Graph.Discovery", "graphOptions": {} },
            "properties": {}
          }
        },
        {
          "label": "generate-sku",
          "waitOn": { "discovery-refresh-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-enclosure",
          "waitOn": { "discovery-refresh-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateEnclosure"
        },
        {
          "label": "create-default-pollers",
          "waitOn": { "discovery-refresh-graph": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sdr" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selInformation" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sel" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selEntries" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 15000,
                  "config": { "command": "chassis" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 30000,
                  "config": { "command": "driveHealth" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Docker Restart",
      "injectableName": "Graph.Docker.Restart",
      "options": {
        "docker-restart": {
          "exec": [
            { "method": "restart", "args": ["{{options.containerId}}", {}] }
          ],
          "containerId": "$containerId"
        }
      },
      "tasks": [
        {
          "label": "docker-restart",
          "taskName": "/api/2.0/workflows/tasks/Task.Docker"
        }
      ]
    },
    {
      "friendlyName": "Docker Container List",
      "injectableName": "Graph.Docker.ListContainers",
      "options": {
        "docker-list": {
          "exec": [
            {
              "method": "list",
              "args": [{ "all": 1 }],
              "emit": {
                "docker-reconciler": { "type": "containers", "ref": 0 }
              }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "docker-list",
          "taskName": "/api/2.0/workflows/tasks/Task.Docker"
        }
      ]
    },
    {
      "friendlyName": "Docker Run",
      "injectableName": "Graph.Docker.Run",
      "options": {
        "docker-run": {
          "exec": [
            {
              "method": "pull",
              "args": ["{{options.image}}", {}],
              "then": [{ "method": "run", "args": ["{{options.image}}", {}] }]
            }
          ],
          "image": "ubuntu:latest"
        }
      },
      "tasks": [
        {
          "label": "docker-run",
          "taskName": "/api/2.0/workflows/tasks/Task.Docker"
        }
      ]
    },
    {
      "friendlyName": "Docker Start",
      "injectableName": "Graph.Docker.Start",
      "options": {
        "docker-start": {
          "exec": [
            { "method": "start", "args": ["{{options.containerId}}", {}] }
          ],
          "containerId": "$containerId"
        }
      },
      "tasks": [
        {
          "label": "docker-start",
          "taskName": "/api/2.0/workflows/tasks/Task.Docker"
        }
      ]
    },
    {
      "friendlyName": "Generate SKU",
      "injectableName": "Graph.GenerateSku",
      "tasks": [
        {
          "label": "generate-sku",
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        }
      ]
    },
    {
      "friendlyName": "SKU Discovery",
      "injectableName": "Graph.SKU.Discovery",
      "options": {
        "defaults": {
          "graphOptions": { "target": null },
          "nodeId": null,
          "nodeIds": ["{{ options.nodeId }}"]
        },
        "skip-pollers": {
          "skipPollersCreation": "false",
          "when": "{{options.skipPollersCreation}}"
        },
        "obm-option": {
          "autoCreateObm": "false",
          "when": "{{options.autoCreateObm}}"
        }
      },
      "tasks": [
        {
          "label": "discovery-graph",
          "taskDefinition": {
            "friendlyName": "Run Discovery Graph",
            "injectableName": "Task.Graph.Run.Discovery",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.rancherDiscovery",
              "graphOptions": {}
            },
            "properties": {}
          }
        },
        {
          "label": "obm-option",
          "waitOn": { "discovery-graph": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "set-bmc-credentials-graph",
          "waitOn": {
            "obm-option": "succeeded",
            "discovery-graph": "finished"
          },
          "taskDefinition": {
            "friendlyName": "Run BMC Credential Graph",
            "injectableName": "Task.Graph.Run.Bmc",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.Set.Bmc.Credentials",
              "defaults": { "graphOptions": {} }
            },
            "properties": {}
          }
        },
        {
          "label": "noop-1",
          "waitOn": { "obm-option": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "generate-sku",
          "waitOn": { "discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-tag",
          "waitOn": { "discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateTag"
        },
        {
          "label": "generate-enclosure",
          "waitOn": { "discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateEnclosure"
        },
        {
          "label": "skip-pollers",
          "waitOn": { "generate-enclosure": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "create-default-pollers",
          "waitOn": {
            "discovery-graph": "succeeded",
            "skip-pollers": "failed"
          },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sdr" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selInformation" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sel" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selEntries" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 15000,
                  "config": { "command": "chassis" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 30000,
                  "config": { "command": "driveHealth" }
                }
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "noop-2",
          "waitOn": { "skip-pollers": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "run-sku-graph",
          "waitOn": { "generate-sku": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run SKU-specific graph",
            "injectableName": "Task.Graph.Run.SkuSpecific",
            "implementsTask": "Task.Base.Graph.RunSku",
            "options": {},
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "SKU Orig Discovery",
      "injectableName": "Graph.SKU.Orig.Discovery",
      "options": {
        "defaults": {
          "graphOptions": { "target": null },
          "nodeId": null,
          "nodeIds": ["{{ options.nodeId }}"]
        },
        "skip-pollers": {
          "skipPollersCreation": "false",
          "when": "{{options.skipPollersCreation}}"
        },
        "obm-option": {
          "autoCreateObm": "false",
          "when": "{{options.autoCreateObm}}"
        }
      },
      "tasks": [
        {
          "label": "discovery-graph",
          "taskDefinition": {
            "friendlyName": "Run Discovery Graph",
            "injectableName": "Task.Graph.Run.Discovery",
            "implementsTask": "Task.Base.Graph.Run",
            "options": { "graphName": "Graph.Discovery", "graphOptions": {} },
            "properties": {}
          }
        },
        {
          "label": "obm-option",
          "waitOn": { "discovery-graph": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "set-bmc-credentials-graph",
          "waitOn": {
            "obm-option": "succeeded",
            "discovery-graph": "finished"
          },
          "taskDefinition": {
            "friendlyName": "Run BMC Credential Graph",
            "injectableName": "Task.Graph.Run.Bmc",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.Set.Bmc.Credentials",
              "defaults": { "graphOptions": {} }
            },
            "properties": {}
          }
        },
        {
          "label": "noop-1",
          "waitOn": { "obm-option": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "generate-sku",
          "waitOn": { "discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-tag",
          "waitOn": { "discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateTag"
        },
        {
          "label": "generate-enclosure",
          "waitOn": { "discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateEnclosure"
        },
        {
          "label": "skip-pollers",
          "waitOn": { "generate-enclosure": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "create-default-pollers",
          "waitOn": {
            "discovery-graph": "succeeded",
            "skip-pollers": "failed"
          },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sdr" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selInformation" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sel" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selEntries" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 15000,
                  "config": { "command": "chassis" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 30000,
                  "config": { "command": "driveHealth" }
                }
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "noop-2",
          "waitOn": { "skip-pollers": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "run-sku-graph",
          "waitOn": { "generate-sku": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run SKU-specific graph",
            "injectableName": "Task.Graph.Run.SkuSpecific",
            "implementsTask": "Task.Base.Graph.RunSku",
            "options": {},
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Docker Stop",
      "injectableName": "Graph.Docker.Stop",
      "options": {
        "docker-stop": {
          "exec": [
            { "method": "stop", "args": ["{{options.containerId}}", {}] }
          ],
          "containerId": "$containerId"
        }
      },
      "tasks": [
        {
          "label": "docker-stop",
          "taskName": "/api/2.0/workflows/tasks/Task.Docker"
        }
      ]
    },
    {
      "friendlyName": "EMC Compose System Graph",
      "injectableName": "Graph.Emc.Compose.System",
      "options": {
        "defaults": { "endpoints": null, "name": null, "action": "compose" }
      },
      "tasks": [
        {
          "label": "emc-compose-system",
          "taskName": "/api/2.0/workflows/tasks/Task.Emc.Compose.System"
        },
        {
          "label": "create-redfish-pollers",
          "waitOn": { "emc-compose-system": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.Redfish.CreateDefault",
            "implementsTask": "Task.Base.Pollers.Redfish.CreateDefault",
            "options": {
              "pollers": [
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "systems.logservices" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "EMC Redfish Catalog",
      "injectableName": "Graph.Emc.Redfish.Catalog",
      "options": {},
      "tasks": [
        {
          "label": "emc-redfish-catalog",
          "taskName": "/api/2.0/workflows/tasks/Task.Emc.Redfish.Catalog"
        }
      ]
    },
    {
      "friendlyName": "DEBUG Bootstrap Ubuntu Mocks",
      "injectableName": "Graph.BootstrapUbuntuMocks",
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-ubuntu",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Ubuntu"
        }
      ]
    },
    {
      "friendlyName": "Install Chef Client",
      "injectableName": "Graph.Chef.Install",
      "tasks": [
        {
          "label": "sftp-archive",
          "taskDefinition": {
            "friendlyName": "Sftp chef keys",
            "injectableName": "Task.SftpKey",
            "implementsTask": "Task.Base.Sftp",
            "options": {
              "archiveSrc": null,
              "archiveName": null,
              "fileSource": "{{options.archiveSrc}}",
              "fileDestination": "/etc/{{options.archiveName}}"
            },
            "properties": {}
          }
        },
        {
          "label": "get-chef-client",
          "waitOn": { "sftp-archive": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Task.Get.Chef.Installer",
            "injectableName": "Task.Chef.GetInstaller",
            "implementsTask": "Task.Base.Ssh.Command",
            "options": {
              "chefIP": null,
              "domainName": null,
              "archiveName": null,
              "commands": [
                "curl -L https://omnitruck.chef.io/install.sh | sudo bash;",
                "{{#options.chefIP}}{{#options.domainName}}echo '{{options.chefIP}}     {{options.domainName}}' | sudo tee -a /etc/hosts{{/options.domainName}}{{/options.chefIP}}",
                "tar -xvf /etc/{{options.archiveName}} -C /etc"
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "run-client",
          "waitOn": { "get-chef-client": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Ssh and run Chef client",
            "injectableName": "Task.Run.Client",
            "implementsTask": "Task.Base.Ssh.Command",
            "options": {
              "name": null,
              "commands": "sudo /usr/bin/chef-client -N {{options.name || task.nodeId}}"
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Docker Service",
      "injectableName": "Graph.Service.Docker",
      "options": {
        "docker-reconciler": { "schedulerOverrides": { "timeout": -1 } }
      },
      "tasks": [
        {
          "label": "docker-reconciler",
          "taskName": "/api/2.0/workflows/tasks/Task.Docker.Reconciler"
        }
      ]
    },
    {
      "friendlyName": "Install Chef Server",
      "injectableName": "Graph.Chef.Install.Server",
      "tasks": [
        {
          "label": "sftp-file",
          "taskDefinition": {
            "friendlyName": "Sftp chef core",
            "injectableName": "Task.SftpFile",
            "implementsTask": "Task.Base.Sftp",
            "options": { "fileSource": null, "fileDestination": null },
            "properties": {}
          }
        },
        {
          "label": "install-chef-core",
          "waitOn": { "sftp-file": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Install Chef",
            "injectableName": "Task.Chef.InstallCore",
            "implementsTask": "Task.Base.Ssh.Command",
            "options": {
              "domainName": null,
              "chefDest": null,
              "sshExecOptions": null,
              "installCommand": "sudo dpkg -i",
              "commands": [
                "{{options.installCommand}} {{options.chefDest}}",
                "echo '127.0.1.1     {{options.domainName}}' | sudo tee -a /etc/hosts"
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "reconfigure",
          "waitOn": { "install-chef-core": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Ssh and run Chef client",
            "injectableName": "Task.Run.Client",
            "implementsTask": "Task.Base.Ssh.Command",
            "options": { "commands": "sudo chef-server-ctl reconfigure" },
            "properties": {}
          }
        },
        {
          "label": "add-user",
          "waitOn": { "reconfigure": "succeeded" },
          "taskDefinition": {
            "friendlyName": "add user",
            "injectableName": "Task.Chef.User.Add",
            "implementsTask": "Task.Base.Ssh.Command",
            "options": {
              "username": null,
              "firstName": null,
              "lastName": null,
              "email": null,
              "password": null,
              "userPemFile": null,
              "commands": [
                "chef-server-ctl user-create {{options.username}} {{options.firstName}} {{options.lastName}} {{options.email}} {{options.password}}{{#options.userPemFile}} -f {{options.userPemFile}}{{/options.userPemFile}}"
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "add-org",
          "waitOn": { "add-user": "succeeded" },
          "taskDefinition": {
            "friendlyName": "add user",
            "injectableName": "Task.Run.Client",
            "implementsTask": "Task.Base.Ssh.Command",
            "options": {
              "sshExecOptions": null,
              "shortName": null,
              "fullName": null,
              "username": null,
              "validatorPemFile": null,
              "commands": [
                "chef-server-ctl org-create {{options.shortName}} '{{options.fullName}}'{{#options.username}} -a {{options.username}}{{/options.username}}{{#options.validatorPemFile}} -f {{options.validatorPemFile}}{{/options.validatorPemFile}}"
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "ESXi Driver Version Retrieval",
      "injectableName": "Graph.ESXi.Driver.Version.Retrieval",
      "options": {
        "versionRetrieval": { "updateExistingCatalog": true },
        "defaults": { "commands": null }
      },
      "tasks": [
        {
          "label": "versionRetrieval",
          "taskDefinition": {
            "friendlyName": "Ssh and run Esxi commands",
            "injectableName": "Task.Run.Ssh",
            "implementsTask": "Task.Base.Ssh.Catalog",
            "options": { "commands": null },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Flash MegaRAID controller",
      "injectableName": "Graph.Flash.LSI.MegaRAID",
      "options": {
        "defaults": { "file": null, "downloadDir": "/opt/downloads" },
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" },
        "flash-firmware": { "adapter": "0" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "download-firmware",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "catalog-megaraid-before",
          "waitOn": { "download-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Megaraid"
        },
        {
          "label": "flash-firmware",
          "waitOn": { "catalog-megaraid-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Flash.LSI.MegaRAID"
        },
        {
          "label": "catalog-megaraid-after",
          "waitOn": { "flash-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Megaraid"
        },
        {
          "label": "final-reboot",
          "waitOn": { "catalog-megaraid-after": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "iPDU firmware update by Sftp",
      "injectableName": "Graph.FirmwareUpdateIPDU",
      "tasks": [
        {
          "label": "sftp-upload-firmware",
          "taskDefinition": {
            "friendlyName": "sftp upload firmware of iPDU",
            "injectableName": "Task.SftpFile",
            "implementsTask": "Task.Base.Sftp",
            "options": {
              "isPDU": "true",
              "fileSource": null,
              "fileDestination": null
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Flash Quanta All Firmwares",
      "injectableName": "Graph.Flash.Quanta",
      "options": {
        "defaults": { "downloadDir": "/opt/downloads" },
        "bootstrap-rancher": { "dockerFile": "quanta.flash.docker.tar.xz" },
        "download-megaraid-firmware": { "file": null },
        "download-bios-firmware": { "file": null },
        "download-bmc-firmware": { "file": null },
        "flash-megaraid": { "file": null },
        "flash-bios": { "file": null },
        "flash-bmc": { "file": null }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "download-megaraid-firmware",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "download-bios-firmware",
          "waitOn": { "download-megaraid-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "download-bmc-firmware",
          "waitOn": { "download-bios-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "catalog-quanta-megaraid-before",
          "waitOn": { "download-bmc-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-quanta-bios-before",
          "waitOn": { "catalog-quanta-megaraid-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ami"
        },
        {
          "label": "catalog-quanta-bmc-before",
          "waitOn": { "catalog-quanta-bios-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "provide-quanta-bios-version",
          "waitOn": { "catalog-quanta-bmc-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalogs.Provide.Ami.BiosVersion"
        },
        {
          "label": "flash-megaraid",
          "waitOn": { "provide-quanta-bios-version": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Flash.LSI.MegaRAID"
        },
        {
          "label": "flash-bios",
          "waitOn": { "flash-megaraid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Flash.Ami.Bios"
        },
        {
          "label": "flash-bmc",
          "waitOn": { "flash-bios": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Flash.Quanta.Bmc"
        },
        {
          "label": "catalog-quanta-megaraid-after",
          "waitOn": { "flash-bmc": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-quanta-bios-after",
          "waitOn": { "catalog-quanta-megaraid-after": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ami"
        },
        {
          "label": "catalog-quanta-bmc-after",
          "waitOn": { "catalog-quanta-bios-after": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "final-reboot",
          "waitOn": { "catalog-quanta-bmc-after": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Flash Quanta BIOS",
      "injectableName": "Graph.Flash.Quanta.BIOS",
      "options": {
        "defaults": { "downloadDir": "/opt/downloads" },
        "bootstrap-rancher": { "dockerFile": "quanta.flash.docker.tar.xz" },
        "download-bios-firmware": { "file": null },
        "flash-bios": { "file": null }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "download-bios-firmware",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "catalog-quanta-bios-before",
          "waitOn": { "download-bios-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ami"
        },
        {
          "label": "provide-quanta-bios-version",
          "waitOn": { "catalog-quanta-bios-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalogs.Provide.Ami.BiosVersion"
        },
        {
          "label": "flash-bios",
          "waitOn": { "provide-quanta-bios-version": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Flash.Ami.Bios"
        },
        {
          "label": "catalog-quanta-bios-after",
          "waitOn": { "flash-bios": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ami"
        },
        {
          "label": "final-reboot",
          "waitOn": { "catalog-quanta-bios-after": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Flash Quanta BMC",
      "injectableName": "Graph.Flash.Quanta.Bmc",
      "options": {
        "defaults": { "downloadDir": "/opt/downloads" },
        "bootstrap-rancher": { "dockerFile": "quanta.flash.docker.tar.xz" },
        "download-bmc-firmware": { "file": null },
        "flash-bmc": { "file": null }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "download-bmc-firmware",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "catalog-quanta-bmc-before",
          "waitOn": { "download-bmc-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "flash-bmc",
          "waitOn": { "catalog-quanta-bmc-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Flash.Quanta.Bmc"
        },
        {
          "label": "catalog-quanta-bmc-after",
          "waitOn": { "flash-bmc": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        }
      ]
    },
    {
      "friendlyName": "Get Switch Version Graph",
      "injectableName": "Graph.Get.Switch.Version",
      "options": {
        "defaults": {
          "endpoint": {
            "ipaddress": null,
            "username": null,
            "password": null,
            "switchType": null
          }
        },
        "Get-switch-version": {
          "loginToken": "Bearer {{ context.outputs[\"On-network-login\"].restData.body.token }}"
        }
      },
      "tasks": [
        {
          "label": "On-network-login",
          "taskName": "/api/2.0/workflows/tasks/Task.Post.Login.On-network"
        },
        {
          "label": "Get-switch-version",
          "waitOn": { "On-network-login": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Get.Switch.Version"
        }
      ]
    },
    {
      "friendlyName": "Get Switch Config Graph",
      "injectableName": "Graph.Get.Switch.Config",
      "options": {
        "defaults": {
          "endpoint": {
            "ipaddress": null,
            "username": null,
            "password": null,
            "switchType": null
          }
        },
        "Get-switch-config": {
          "loginToken": "Bearer {{ context.outputs[\"On-network-login\"].restData.body.token }}"
        }
      },
      "tasks": [
        {
          "label": "On-network-login",
          "taskName": "/api/2.0/workflows/tasks/Task.Post.Login.On-network"
        },
        {
          "label": "Get-switch-config",
          "waitOn": { "On-network-login": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Get.Switch.Config"
        }
      ]
    },
    {
      "friendlyName": "Flash Quanta MegaRAID",
      "injectableName": "Graph.Flash.Quanta.MegaRAID",
      "options": {
        "defaults": { "downloadDir": "/opt/downloads" },
        "bootstrap-rancher": { "dockerFile": "quanta.flash.docker.tar.xz" },
        "download-megaraid-firmware": { "file": null },
        "flash-megaraid": { "file": null }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "download-megaraid-firmware",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "catalog-quanta-megaraid-before",
          "waitOn": { "download-megaraid-firmware": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "flash-megaraid",
          "waitOn": { "catalog-quanta-megaraid-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Flash.LSI.MegaRAID"
        },
        {
          "label": "catalog-quanta-megaraid-after",
          "waitOn": { "flash-megaraid": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "final-reboot",
          "waitOn": { "catalog-quanta-megaraid-after": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Install CentOS",
      "injectableName": "Graph.InstallCentOS",
      "options": {
        "install-os": { "version": null, "_taskTimeout": 3600000 },
        "rackhd-callback-notification-wait": { "_taskTimeout": 1200000 }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-os",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.CentOS"
        },
        {
          "label": "rackhd-callback-notification-wait",
          "waitOn": { "install-os": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Generate Tag",
      "injectableName": "Graph.GenerateTags",
      "options": { "generate-tag": { "nodeIds": null } },
      "tasks": [
        {
          "label": "generate-tag",
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateTag"
        }
      ]
    },
    {
      "friendlyName": "Install Photon OS",
      "injectableName": "Graph.InstallPhotonOS",
      "options": {
        "install-os": {
          "version": null,
          "schedulerOverrides": { "timeout": 3600000 }
        },
        "rackhd-callback-notification-wait": {
          "schedulerOverrides": { "timeout": 1200000 }
        }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-os",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.PhotonOS"
        },
        {
          "label": "rackhd-callback-notification-wait",
          "waitOn": { "install-os": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Install Debian/Ubuntu",
      "injectableName": "Graph.InstallDebian",
      "options": {},
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-debian",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.Debian"
        },
        {
          "label": "rackhd-callback-notification-wait",
          "waitOn": { "install-debian": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Install Ubuntu",
      "injectableName": "Graph.InstallUbuntu",
      "options": {
        "install-ubuntu": { "osName": "ubuntu", "version": "trusty" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-ubuntu",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.Debian"
        },
        {
          "label": "rackhd-callback-notification-wait",
          "waitOn": { "install-ubuntu": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Install ESXi",
      "injectableName": "Graph.InstallESXi",
      "options": {
        "defaults": {
          "version": null,
          "repo": "{{file.server}}/esxi/{{options.version}}"
        },
        "install-os": { "_taskTimeout": 3600000 },
        "firstboot-callback-notification-wait": { "_taskTimeout": 1200000 },
        "installed-callback-notification-wait": { "_taskTimeout": 1200000 }
      },
      "tasks": [
        {
          "label": "analyze-repo",
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Esx.Analyze.Repo"
        },
        {
          "label": "set-boot-pxe",
          "waitOn": { "analyze-repo": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-os",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.ESXi"
        },
        {
          "label": "firstboot-callback-notification-wait",
          "waitOn": { "install-os": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        },
        {
          "label": "installed-callback-notification-wait",
          "waitOn": { "firstboot-callback-notification-wait": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Intel Flashupdt Info",
      "injectableName": "Graph.Catalog.Intel.Flashupdt",
      "options": {
        "bootstrap-rancher": { "dockerFile": "intel.flash.docker.tar.xz" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "catalog-flashupdt",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.flashupdt"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-flashupdt": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        }
      ]
    },
    {
      "friendlyName": "Install Windows Server 2012",
      "injectableName": "Graph.InstallWindowsServer",
      "options": { "defaults": { "smbUser": null, "smbPassword": null } },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-os",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.Win"
        },
        {
          "label": "firstboot-callback-notification-wait",
          "waitOn": { "install-os": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Install CoreOS",
      "injectableName": "Graph.InstallCoreOS",
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-coreos",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.CoreOS"
        }
      ]
    },
    {
      "friendlyName": "Install SUSE",
      "injectableName": "Graph.InstallSUSE",
      "options": { "install-os": { "version": null, "_taskTimeout": 3600000 } },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-os",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.SUSE"
        },
        {
          "label": "rackhd-callback-notification-wait",
          "waitOn": { "install-os": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Poller Service",
      "injectableName": "Graph.Service.Poller",
      "options": {
        "clean-workitems": { "schedulerOverrides": { "timeout": -1 } },
        "run-workitems": { "schedulerOverrides": { "timeout": -1 } },
        "ipmi": { "schedulerOverrides": { "timeout": -1 } },
        "snmp": { "schedulerOverrides": { "timeout": -1 } },
        "ipmi-sdr-alert": { "schedulerOverrides": { "timeout": -1 } },
        "ipmi-sel-alert": { "schedulerOverrides": { "timeout": -1 } },
        "poller-cache": { "schedulerOverrides": { "timeout": -1 } },
        "redfish": { "schedulerOverrides": { "timeout": -1 } },
        "wsman": { "schedulerOverrides": { "timeout": -1 } },
        "ucs": { "schedulerOverrides": { "timeout": -1 } }
      },
      "tasks": [
        {
          "label": "clean-workitems",
          "taskDefinition": {
            "friendlyName": "Clean Poller Work Items",
            "injectableName": "Task.Inline.Poller.WorkItems.Clean",
            "implementsTask": "Task.Base.WorkItems.Clean",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "run-workitems",
          "taskDefinition": {
            "friendlyName": "Run Poller Work Items",
            "injectableName": "Task.Inline.Poller.WorkItems.Run",
            "implementsTask": "Task.Base.WorkItems.Run",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "ipmi",
          "taskDefinition": {
            "friendlyName": "Ipmi requester",
            "injectableName": "Task.Inline.Ipmi",
            "implementsTask": "Task.Base.Ipmi",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "snmp",
          "taskDefinition": {
            "friendlyName": "SNMP requester",
            "injectableName": "Task.Inline.Snmp",
            "implementsTask": "Task.Base.Snmp",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "ipmi-sdr-alert",
          "taskDefinition": {
            "friendlyName": "IPMI Sdr alerter",
            "injectableName": "Task.Inline.Poller.Alert.Ipmi.Sdr",
            "implementsTask": "Task.Base.Poller.Alert.Ipmi.Sdr",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "ipmi-sel-alert",
          "taskDefinition": {
            "friendlyName": "IPMI Sel alerter",
            "injectableName": "Task.Inline.Poller.Alert.Ipmi.Sel",
            "implementsTask": "Task.Base.Poller.Alert.Ipmi.Sel",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "poller-cache",
          "taskDefinition": {
            "friendlyName": "Poller cache",
            "injectableName": "Task.Inline.Poller.Cache",
            "implementsTask": "Task.Base.Message.Cache",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "redfish",
          "taskDefinition": {
            "friendlyName": "Redfish requester",
            "injectableName": "Task.Inline.Redfish",
            "implementsTask": "Task.Base.Redfish",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "wsman",
          "taskDefinition": {
            "friendlyName": "Wsman requester",
            "injectableName": "Task.Inline.Wsman",
            "implementsTask": "Task.Base.Wsman",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "ucs",
          "taskDefinition": {
            "friendlyName": "UCS requester",
            "injectableName": "Task.Inline.Ucs",
            "implementsTask": "Task.Base.Ucs",
            "options": {},
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "noop-graph",
      "injectableName": "Graph.noop-example",
      "tasks": [
        { "label": "noop-1", "taskName": "/api/2.0/workflows/tasks/Task.noop" },
        {
          "label": "noop-2",
          "waitOn": { "noop-1": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "parallel-noop-1",
          "waitOn": { "noop-2": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "parallel-noop-2",
          "waitOn": { "noop-2": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        }
      ]
    },
    {
      "friendlyName": "PowerOn Node",
      "injectableName": "Graph.PowerOn.Node",
      "tasks": [
        {
          "label": "poweron",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PowerOn"
        }
      ]
    },
    {
      "friendlyName": "Discovery by Rancher",
      "injectableName": "Graph.rancherDiscovery",
      "options": {
        "bootstrap-rancher": { "triggerGroup": "bootstrap" },
        "finish-bootstrap-trigger": { "triggerGroup": "bootstrap" },
        "skip-reboot-post-discovery": {
          "skipReboot": "false",
          "when": "{{options.skipReboot}}"
        }
      },
      "tasks": [
        {
          "label": "bootstrap-rancher",
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "catalog-dmi",
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.dmi"
        },
        {
          "label": "catalog-ohai",
          "waitOn": { "catalog-dmi": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ohai"
        },
        {
          "label": "catalog-bmc",
          "waitOn": { "catalog-ohai": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "set-interfaces",
          "waitOn": { "catalog-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Set.Interfaces"
        },
        {
          "label": "catalog-lsall",
          "waitOn": { "set-interfaces": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.lsall"
        },
        {
          "label": "catalog-megaraid",
          "waitOn": { "catalog-lsall": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-perccli",
          "waitOn": { "catalog-megaraid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.perccli"
        },
        {
          "label": "catalog-smart",
          "waitOn": { "catalog-perccli": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.smart"
        },
        {
          "label": "catalog-driveid",
          "waitOn": { "catalog-smart": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "catalog-lldp",
          "waitOn": { "catalog-driveid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.LLDP"
        },
        {
          "label": "set-boot-pxe",
          "waitOn": { "catalog-lldp": "finished" },
          "taskDefinition": {
            "friendlyName": "Set PXE boot",
            "injectableName": "Task.Node.PxeBoot",
            "implementsTask": "Task.Base.Linux.Commands",
            "options": { "commands": "sudo ipmitool chassis bootdev pxe" },
            "properties": {}
          }
        },
        {
          "label": "skip-reboot-post-discovery",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "skip-reboot-post-discovery": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "noop",
          "waitOn": { "skip-reboot-post-discovery": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        },
        {
          "label": "node-discovered-alert",
          "waitOn": { "finish-bootstrap-trigger": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Alert.Node.Discovered"
        }
      ]
    },
    {
      "friendlyName": "Remove BMC Credentials",
      "injectableName": "Graph.Remove.Bmc.Credentials",
      "options": { "remove-bmc-credentials": { "users": null } },
      "tasks": [
        {
          "label": "remove-bmc-credentials",
          "taskName": "/api/2.0/workflows/tasks/Task.Remove.BMC.Credentials"
        },
        {
          "label": "catalog-bmc",
          "waitOn": { "remove-bmc-credentials": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "catalog-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        }
      ]
    },
    {
      "friendlyName": "Install RHEL",
      "injectableName": "Graph.InstallRHEL",
      "options": {
        "install-os": { "version": null, "_taskTimeout": 3600000 },
        "rackhd-callback-notification-wait": { "_taskTimeout": 1200000 }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "install-os",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.CentOS"
        },
        {
          "label": "rackhd-callback-notification-wait",
          "waitOn": { "install-os": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    },
    {
      "friendlyName": "Cold Reset BMC",
      "injectableName": "Graph.McReset",
      "tasks": [
        {
          "label": "mc-reset",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.McResetCold"
        }
      ]
    },
    {
      "friendlyName": "PowerOff Node",
      "injectableName": "Graph.PowerOff.Node",
      "tasks": [
        {
          "label": "poweroff",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PowerOff"
        }
      ]
    },
    {
      "friendlyName": "Reboot Node",
      "injectableName": "Graph.Reboot.Node",
      "tasks": [
        {
          "label": "reboot",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Set BMC Credentials",
      "injectableName": "Graph.Set.Bmc.Credentials",
      "options": { "generate-pass": { "user": null, "password": null } },
      "tasks": [
        {
          "label": "generate-pass",
          "taskDefinition": {
            "friendlyName": "Generate BMC Password",
            "injectableName": "Task.Generate.BMC.Password",
            "implementsTask": "Task.Base.Generate.Password",
            "options": { "user": null },
            "properties": {}
          }
        },
        {
          "label": "set-bmc",
          "waitOn": { "generate-pass": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Set.BMC.Credentials"
        },
        {
          "label": "catalog-bmc",
          "waitOn": { "set-bmc": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "create-ipmi-obm-settings",
          "waitOn": { "catalog-bmc": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Ipmi.CreateSettings"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "create-ipmi-obm-settings": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "create-ipmi-obm-settings": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        }
      ]
    },
    {
      "friendlyName": "Reset Node",
      "injectableName": "Graph.Reset.Node",
      "tasks": [
        {
          "label": "reset",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reset"
        }
      ]
    },
    {
      "friendlyName": "Set Idrac Ipaddress",
      "injectableName": "Graph.SetIdracIp",
      "options": { "defaults": { "commands": [] } },
      "tasks": [
        {
          "label": "ssh-to-microkernel",
          "taskName": "/api/2.0/workflows/tasks/Task.Ssh.Exec"
        }
      ]
    },
    {
      "friendlyName": "Persist Poller Data",
      "injectableName": "Graph.Persist.Poller.Data",
      "options": {
        "defaults": {
          "pollerId": null,
          "nodeId": null,
          "interval": null,
          "duration": null,
          "catalogName": null,
          "path": null
        }
      },
      "tasks": [
        {
          "label": "persist-poller-data",
          "taskName": "/api/2.0/workflows/tasks/Task.Persist.Poller.Data"
        }
      ]
    },
    {
      "friendlyName": "Catalog by Rancher",
      "injectableName": "Graph.Catalog.Rancher",
      "options": {
        "bootstrap-rancher": { "triggerGroup": "catalog" },
        "finish-bootstrap-trigger": { "triggerGroup": "catalog" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "catalog-dmi",
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.dmi"
        },
        {
          "label": "catalog-ohai",
          "waitOn": { "catalog-dmi": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.ohai"
        },
        {
          "label": "catalog-bmc",
          "waitOn": { "catalog-ohai": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.bmc"
        },
        {
          "label": "set-interfaces",
          "waitOn": { "catalog-bmc": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Set.Interfaces"
        },
        {
          "label": "catalog-lsall",
          "waitOn": { "set-interfaces": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.lsall"
        },
        {
          "label": "catalog-megaraid",
          "waitOn": { "catalog-lsall": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-perccli",
          "waitOn": { "catalog-megaraid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.perccli"
        },
        {
          "label": "catalog-smart",
          "waitOn": { "catalog-perccli": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.smart"
        },
        {
          "label": "catalog-driveid",
          "waitOn": { "catalog-smart": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "catalog-lldp",
          "waitOn": { "catalog-driveid": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.LLDP"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-lldp": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "catalog-lldp": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        }
      ]
    },
    {
      "friendlyName": "Switch Discovery",
      "injectableName": "Graph.Switch.Discovery",
      "options": {
        "defaults": { "nodeId": null, "nodeIds": ["{{ options.nodeId }}"] },
        "create-switch-snmp-pollers": {
          "pollers": [
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-interface-bandwidth-utilization" }
            },
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-interface-state" }
            },
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-processor-load" }
            },
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-memory-usage" }
            },
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-txrx-counters" }
            },
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-switch-sensor-status" }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "ping-host",
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Ping"
        },
        {
          "label": "collect-snmp",
          "waitOn": { "ping-host": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Collect.Discovery"
        },
        {
          "label": "catalog-snmp",
          "waitOn": { "ping-host": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Catalog"
        },
        {
          "label": "update-lookups",
          "waitOn": { "catalog-snmp": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Update.Lookups"
        },
        {
          "label": "create-switch-snmp-pollers",
          "waitOn": { "catalog-snmp": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Pollers.CreateDefault"
        },
        {
          "label": "update-node-name",
          "waitOn": { "catalog-snmp": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Node.Update"
        },
        {
          "label": "switch-node-relations",
          "waitOn": { "catalog-snmp": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run switch to nodes relations",
            "injectableName": "Task.Catalog.SwitchRelations",
            "implementsTask": "Task.Base.Catalog.SwitchRelations",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "generate-sku",
          "waitOn": { "switch-node-relations": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-tag",
          "waitOn": { "switch-node-relations": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateTag"
        },
        {
          "label": "node-discovered-alert",
          "waitOn": { "update-node-name": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Alert.Node.Discovered"
        }
      ]
    },
    {
      "friendlyName": "Redfish Reset Actions",
      "injectableName": "Graph.Redfish.Actions.Reset",
      "options": { "defaults": { "target": null } },
      "tasks": [
        {
          "label": "actions-reset",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Redfish.Actions.Reset"
        }
      ]
    },
    {
      "friendlyName": "Secure Erase Drive",
      "injectableName": "Graph.Drive.SecureErase",
      "options": {
        "bootstrap-rancher": {
          "dockerFile": "secure.erase.docker.tar.xz",
          "triggerGroup": "secureErase"
        },
        "drive-secure-erase": { "eraseSettings": null },
        "drive-scan-delay": { "duration": 10000 },
        "finish-bootstrap-trigger": { "triggerGroup": "secureErase" }
      },
      "tasks": [
        {
          "label": "cache-driveId-catalog",
          "taskName": "/api/2.0/workflows/tasks/Task.Get.DriveId.Catalog"
        },
        {
          "label": "set-boot-pxe",
          "waitOn": { "cache-driveId-catalog": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "drive-scan-delay",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Node.Sleep"
        },
        {
          "label": "catalog-driveid-before",
          "waitOn": { "drive-scan-delay": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "catalog-megaraid-before",
          "waitOn": { "catalog-driveid-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "drive-secure-erase",
          "waitOn": { "catalog-megaraid-before": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Drive.SecureErase"
        },
        {
          "label": "catalog-megaraid-after",
          "waitOn": { "drive-secure-erase": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "catalog-driveid-after",
          "waitOn": { "catalog-megaraid-after": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.Drive.Id"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-driveid-after": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        },
        {
          "label": "finish-bootstrap-trigger",
          "waitOn": { "catalog-driveid-after": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Trigger.Send.Finish"
        }
      ]
    },
    {
      "friendlyName": "Active Switch SKU Discovery",
      "injectableName": "Graph.SKU.Switch.Discovery.Active",
      "options": {
        "defaults": {
          "nodeId": null,
          "nodeIds": ["{{ options.nodeId }}"],
          "graphOptions": { "target": null }
        },
        "vendor-discovery-graph": { "graphName": null }
      },
      "tasks": [
        {
          "label": "vendor-discovery-graph",
          "taskDefinition": {
            "friendlyName": "Run Vendor-specific Switch Discovery",
            "injectableName": "Task.Graph.Run.Switch.Discovery.VendorSpecific",
            "implementsTask": "Task.Base.Graph.Run",
            "options": { "graphName": null, "graphOptions": {} },
            "properties": {}
          }
        },
        {
          "label": "generate-sku",
          "waitOn": { "vendor-discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-tag",
          "waitOn": { "vendor-discovery-graph": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateTag"
        },
        {
          "label": "run-sku-graph",
          "waitOn": { "generate-sku": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run SKU-specific graph",
            "injectableName": "Task.Graph.Run.SkuSpecific",
            "implementsTask": "Task.Base.Graph.RunSku",
            "options": { "nodeId": null },
            "properties": {}
          }
        },
        {
          "label": "run-sku-post-hooks",
          "waitOn": { "run-sku-graph": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run Switch SKU graph post-hooks",
            "injectableName": "Task.Graph.Run.Switch.Discovery.Hooks.Post",
            "implementsTask": "Task.Base.Graph.Run",
            "options": {
              "graphName": "Graph.Switch.SKU.Discovery.Hooks.Post",
              "graphOptions": {}
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "UCS Poller",
      "injectableName": "Graph.UCS.Poller",
      "options": {
        "defaults": {
          "graphOptions": { "target": null },
          "nodeId": null,
          "nodeIds": ["{{ options.nodeId }}"]
        }
      },
      "tasks": [
        {
          "label": "create-ucs-pollers",
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.powerthermal" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.fan" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.psu" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.disk" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.led" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.sel" }
                }
              ]
            },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "PDU Discovery",
      "injectableName": "Graph.PDU.Discovery",
      "options": {
        "defaults": { "nodeId": null, "nodeIds": ["{{ options.nodeId }}"] },
        "create-pdu-snmp-pollers": {
          "pollers": [
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-pdu-power-status" }
            },
            {
              "type": "snmp",
              "pollInterval": 60000,
              "config": { "metric": "snmp-pdu-sensor-status" }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "ping-host",
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Ping"
        },
        {
          "label": "collect-snmp",
          "waitOn": { "ping-host": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Collect.Discovery"
        },
        {
          "label": "catalog-snmp",
          "waitOn": { "ping-host": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Catalog"
        },
        {
          "label": "create-pdu-snmp-pollers",
          "waitOn": { "catalog-snmp": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Pollers.CreateDefault"
        },
        {
          "label": "update-node-name",
          "waitOn": { "catalog-snmp": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Snmp.Node.Update"
        },
        {
          "label": "pdu-node-relations",
          "waitOn": { "catalog-snmp": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run pdu to nodes relations",
            "injectableName": "Task.Catalog.PduRelations",
            "implementsTask": "Task.Base.Catalog.PduRelations",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "generate-sku",
          "waitOn": { "pdu-node-relations": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateSku"
        },
        {
          "label": "generate-tag",
          "waitOn": { "pdu-node-relations": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.GenerateTag"
        },
        {
          "label": "run-sku-graph",
          "waitOn": { "generate-sku": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Run SKU-specific graph",
            "injectableName": "Task.Graph.Run.SkuSpecific",
            "implementsTask": "Task.Base.Graph.RunSku",
            "options": {},
            "properties": {}
          }
        },
        {
          "label": "node-discovered-alert",
          "waitOn": { "update-node-name": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Alert.Node.Discovered"
        }
      ]
    },
    {
      "friendlyName": "Run a UEFI Application",
      "injectableName": "Graph.RunUefi",
      "options": { "defaults": { "repo": null, "uefitool": null, "args": "" } },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "runuefi",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Run.Uefi"
        }
      ]
    },
    {
      "friendlyName": "Quanta storcli Catalog",
      "injectableName": "Graph.Quanta.storcli.Catalog",
      "options": {
        "bootstrap-rancher": { "dockerFile": "secure.erase.docker.tar.xz" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "catalog-storcli",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Catalog.megaraid"
        },
        {
          "label": "shell-reboot",
          "waitOn": { "catalog-storcli": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.ProcShellReboot"
        }
      ]
    },
    {
      "friendlyName": "Redfish Ip Range Discovery",
      "injectableName": "Graph.Redfish.Ip.Range.Discovery",
      "options": {
        "defaults": {
          "ranges": [
            {
              "startIp": null,
              "endIp": null,
              "credentials": { "userName": null, "password": null }
            }
          ]
        }
      },
      "tasks": [
        {
          "label": "redfish-ip-range-discovery",
          "taskName": "/api/2.0/workflows/tasks/Task.Redfish.Ip.Range.Discovery"
        },
        {
          "label": "redfish-discovery-list",
          "waitOn": { "redfish-ip-range-discovery": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Redfish.Discovery.List"
        },
        {
          "label": "redfish-catalog-discovered",
          "waitOn": { "redfish-discovery-list": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.General.Redfish.Catalog"
        },
        {
          "label": "redfish-update-lookups",
          "waitOn": { "redfish-catalog-discovered": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Redfish.Update.Lookups"
        }
      ]
    },
    {
      "friendlyName": "Run rest command",
      "injectableName": "Graph.Run.Rest.Command",
      "options": {
        "defaults": {
          "url": null,
          "credential": null,
          "method": null,
          "headers": null,
          "data": null,
          "verifySSL": null,
          "recvTimeoutMs": null
        }
      },
      "tasks": [
        {
          "label": "run-rest-command",
          "taskName": "/api/2.0/workflows/tasks/Task.run.rest.command"
        }
      ]
    },
    {
      "friendlyName": "Soft Reset Node",
      "injectableName": "Graph.Reset.Soft.Node",
      "tasks": [
        {
          "label": "soft-reset",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reset.Soft"
        }
      ]
    },
    {
      "friendlyName": "Zerotouch vEOS Graph",
      "injectableName": "Graph.Arista.Zerotouch.vEOS",
      "tasks": [
        {
          "label": "zerotouch-veos",
          "taskDefinition": {
            "friendlyName": "Arista Zerotouch vEOS",
            "injectableName": "Task.Inline.Arista.Zerotouch.vEOS",
            "implementsTask": "Task.Base.Arista.Zerotouch",
            "options": {
              "profile": "zerotouch-configure.zt",
              "bootConfig": "arista-boot-config",
              "startupConfig": "arista-startup-config",
              "eosImage": "common/zerotouch-vEOS.swi",
              "bootfile": "zerotouch-vEOS.swi",
              "hostname": "RenasarVEOS"
            },
            "properties": {
              "os": { "switch": { "type": "vEOS", "virtual": true } }
            }
          }
        }
      ]
    },
    {
      "friendlyName": "Ucs Discovery",
      "injectableName": "Graph.Ucs.Discovery",
      "options": {
        "defaults": { "uri": null },
        "when-discover-physical-ucs": {
          "discoverPhysicalServers": "true",
          "updateExistingCatalog": true,
          "when": "{{options.discoverPhysicalServers}}"
        },
        "when-discover-logical-ucs": {
          "discoverLogicalServer": "true",
          "updateExistingCatalog": true,
          "when": "{{options.discoverLogicalServer}}"
        },
        "when-catalog-ucs": {
          "autoCatalogUcs": "true",
          "updateExistingCatalog": true,
          "when": "{{options.autoCatalogUcs}}"
        },
        "skip-pollers": {
          "skipPollersCreation": "false",
          "when": "{{options.skipPollersCreation}}"
        },
        "skip-ipmi-pollers": {
          "skipIPMIPollersCreation": "true",
          "when": "{{options.skipIPMIPollersCreation}}"
        }
      },
      "tasks": [
        {
          "label": "when-discover-physical-ucs",
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "when-discover-logical-ucs",
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "ucs-physical-discovery",
          "waitOn": { "when-discover-physical-ucs": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Ucs.Discovery"
        },
        {
          "label": "ucs-logical-discovery",
          "waitOn": { "when-discover-logical-ucs": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Ucs.Service.Profile.Discovery"
        },
        {
          "label": "ucs-physical-discovery-done",
          "waitOn": {
            "anyOf": {
              "when-discover-physical-ucs": "failed",
              "ucs-physical-discovery": "succeeded"
            }
          },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "ucs-logical-discovery-done",
          "waitOn": {
            "anyOf": {
              "when-discover-logical-ucs": "failed",
              "ucs-logical-discovery": "succeeded"
            }
          },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        },
        {
          "label": "when-catalog-ucs",
          "waitOn": {
            "ucs-physical-discovery-done": "succeeded",
            "ucs-logical-discovery-done": "succeeded"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "ucs-catalog",
          "waitOn": { "when-catalog-ucs": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Ucs.Catalog"
        },
        {
          "label": "skip-pollers",
          "waitOn": { "ucs-catalog": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "create-ucs-pollers",
          "waitOn": { "ucs-catalog": "succeeded", "skip-pollers": "failed" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.powerthermal" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.fan" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.psu" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.disk" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.led" }
                },
                {
                  "type": "ucs",
                  "pollInterval": 60000,
                  "config": { "command": "ucs.sel" }
                }
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "skip-ipmi-pollers",
          "waitOn": { "ucs-catalog": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "create-ucs-ipmi-pollers",
          "waitOn": {
            "ucs-catalog": "succeeded",
            "skip-ipmi-pollers": "failed"
          },
          "taskDefinition": {
            "friendlyName": "Create Default IPMI Pollers",
            "injectableName": "Task.Inline.Pollers.CreateDefault",
            "implementsTask": "Task.Base.Pollers.CreateDefault",
            "options": {
              "nodeId": null,
              "pollers": [
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sdr" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selInformation" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "sel" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "selEntries" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "chassis" }
                },
                {
                  "type": "ipmi",
                  "pollInterval": 60000,
                  "config": { "command": "driveHealth" }
                }
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "noop",
          "waitOn": { "when-catalog-ucs": "failed" },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        }
      ]
    },
    {
      "friendlyName": "Write Quanta BIOS NVRAM",
      "injectableName": "Graph.Write.Quanta.BIOS.NVRAM",
      "options": {
        "defaults": { "file": null },
        "bootstrap-rancher": { "dockerFile": "quanta.flash.docker.tar.xz" }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "download-nvram-settings",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.DownloadFiles"
        },
        {
          "label": "nvram-settings",
          "waitOn": { "download-nvram-settings": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.SetNvram.Ami"
        },
        {
          "label": "final-reboot",
          "waitOn": { "nvram-settings": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Redfish Discovery",
      "injectableName": "Graph.Redfish.Discovery",
      "options": {
        "defaults": { "uri": null },
        "when-catalog-emc": {
          "autoCatalogEmc": "false",
          "when": "{{options.autoCatalogEmc}}"
        },
        "when-pollers-emc": {
          "autoCreatePollerEmc": "false",
          "when": "{{options.autoCreatePollerEmc}}"
        }
      },
      "tasks": [
        {
          "label": "redfish-client-discovery",
          "taskName": "/api/2.0/workflows/tasks/Task.Redfish.Discovery"
        },
        {
          "label": "create-redfish-pollers",
          "waitOn": { "redfish-client-discovery": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.Redfish.CreateDefault",
            "implementsTask": "Task.Base.Pollers.Redfish.CreateDefault",
            "options": {
              "pollers": [
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "thermal" }
                },
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "power" }
                },
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "managers.logservices" }
                },
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "systems.logservices" }
                }
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "when-catalog-emc",
          "waitOn": { "create-redfish-pollers": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "emc-redfish-catalog",
          "waitOn": { "when-catalog-emc": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Emc.Redfish.Catalog"
        },
        {
          "label": "general-redfish-catalog",
          "waitOn": { "redfish-client-discovery": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.General.Redfish.Catalog"
        },
        {
          "label": "when-pollers-emc",
          "waitOn": { "create-redfish-pollers": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Evaluate.Condition"
        },
        {
          "label": "create-emc-redfish-pollers",
          "waitOn": { "when-pollers-emc": "succeeded" },
          "taskDefinition": {
            "friendlyName": "Create Default Pollers",
            "injectableName": "Task.Inline.Pollers.Redfish.CreateDefault",
            "implementsTask": "Task.Base.Pollers.Redfish.CreateDefault",
            "options": {
              "pollers": [
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "fabricservice" }
                },
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "elements.thermal" }
                },
                {
                  "type": "redfish",
                  "pollInterval": 10000,
                  "config": { "command": "elements.power" }
                }
              ]
            },
            "properties": {}
          }
        },
        {
          "label": "noop",
          "waitOn": {
            "when-catalog-emc": "failed",
            "when-pollers-emc": "failed"
          },
          "taskName": "/api/2.0/workflows/tasks/Task.noop"
        }
      ]
    },
    {
      "friendlyName": "Run EMC Diagnostics",
      "injectableName": "Graph.Run.Emc.Diag",
      "options": {
        "set-boot-pxe": { "delay": 1000, "retries": 10 },
        "reboot-start": { "delay": 1000, "retries": 10 }
      },
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Force.Pxe.Boot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reset"
        },
        {
          "label": "bootstrap-emc-diag",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Run.Emc.Diag"
        }
      ]
    },
    {
      "friendlyName": "Shell Commands",
      "injectableName": "Graph.ShellCommands",
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot-start",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reboot-start": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "shell-commands",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Commands"
        },
        {
          "label": "reboot-end",
          "waitOn": { "shell-commands": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        }
      ]
    },
    {
      "friendlyName": "Ucs Catalog",
      "injectableName": "Graph.Ucs.Catalog",
      "options": {},
      "tasks": [
        {
          "label": "ucs-catalog",
          "taskName": "/api/2.0/workflows/tasks/Task.Ucs.Catalog"
        }
      ]
    },
    {
      "friendlyName": "Bootstrap WinPE",
      "injectableName": "Graph.BootstrapWinPE",
      "tasks": [
        {
          "label": "set-boot-pxe",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reboot",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reboot"
        },
        {
          "label": "bootstrap-winpe",
          "waitOn": { "reboot": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.WinPE.Bootstrap"
        }
      ]
    },
    {
      "friendlyName": "Switch Discovery SKU Graph post-hooks",
      "injectableName": "Graph.Switch.SKU.Discovery.Hooks.Post",
      "tasks": [
        {
          "label": "exit-switch-taskrunner-success",
          "taskDefinition": {
            "friendlyName": "Exit switch taskrunner with success",
            "injectableName": "Task.Inline.ExitSwitchTaskRunner.Succeeded",
            "implementsTask": "Task.Base.ShellReboot",
            "options": { "rebootCode": 0 },
            "properties": {}
          }
        },
        {
          "label": "node-discovered-alert",
          "waitOn": { "exit-switch-taskrunner-success": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Alert.Node.Discovered"
        }
      ]
    },
    {
      "friendlyName": "Update Switch Firmware",
      "injectableName": "Graph.Update.Switch.Firmware",
      "options": {
        "defaults": {
          "endpoint": {
            "ipaddress": null,
            "username": null,
            "password": null,
            "switchType": null
          },
          "switchModel": null,
          "firmwareImages": null
        },
        "Get-switch-config": {
          "loginToken": "Bearer {{ context.outputs[\"On-network-login\"].restData.body.token }}"
        },
        "Post-update-switch-firmware": {
          "loginToken": "Bearer {{ context.outputs[\"On-network-login\"].restData.body.token }}"
        }
      },
      "tasks": [
        {
          "label": "On-network-login",
          "taskName": "/api/2.0/workflows/tasks/Task.Post.Login.On-network"
        },
        {
          "label": "Get-switch-config",
          "waitOn": { "On-network-login": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Get.Switch.Config"
        },
        {
          "label": "Post-update-switch-firmware",
          "waitOn": { "On-network-login": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Post.Update.Switch"
        }
      ]
    },
    {
      "friendlyName": "WSMAN Poller Service",
      "injectableName": "Graph.Service.Poller.Wsman",
      "options": { "defaults": { "serviceId": null, "nodeId": null } },
      "tasks": [
        {
          "label": "wsman",
          "taskDefinition": {
            "friendlyName": "Wsman requester",
            "injectableName": "Task.Inline.Wsman",
            "implementsTask": "Task.Base.Wsman",
            "options": { "serviceId": null, "nodeId": null },
            "properties": {}
          }
        }
      ]
    },
    {
      "friendlyName": "Setup inspur node",
      "injectableName": "Graph.Setup.Inspur.Custom",
      "options": {
        "install-ubuntu": {
          "timezone": "UTC",
          "baseUrl": "install/netboot/ubuntu-installer/amd64",
          "profile": "ubuntu-custom.ipxe",
          "repo": "{{ file.server }}/ubuntu",
          "installDisk": "/dev/md0",
          "rootPassword": "RackHDRocks!",
          "osName": "ubuntu",
          "installScriptUri": "{{ api.templates }}/custom-preseed.cfg?nodeId={{ task.nodeId }}",
          "version": "bionic",
          "kargs": { "raid": "part" }
        },
        "check-bios-version": { "bios_desired_version": "4.0.7" },
        "set-ipmi-settings": { "password": "admin", "user": "admin" },
        "bootstrap-rancher": {
          "_taskTimeout": 600000,
          "dockerFile": "provision.docker.tar.xz"
        }
      },
      "tasks": [
        {
          "label": "set-ipmi-settings",
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Ipmi.CreateSettings"
        },
        {
          "label": "set-boot-pxe",
          "waitOn": { "set-ipmi-settings": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reset",
          "waitOn": { "set-boot-pxe": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reset"
        },
        {
          "label": "bootstrap-rancher",
          "waitOn": { "reset": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Linux.Bootstrap.Rancher"
        },
        {
          "label": "configure-jbod",
          "waitOn": { "bootstrap-rancher": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Init.ConfigureJBOD"
        },
        {
          "label": "set-boot-pxe-2",
          "waitOn": { "configure-jbod": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.PxeBoot"
        },
        {
          "label": "reset-2",
          "waitOn": { "set-boot-pxe-2": "finished" },
          "taskName": "/api/2.0/workflows/tasks/Task.Obm.Node.Reset"
        },
        {
          "label": "install-ubuntu",
          "waitOn": { "reset-2": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Os.Install.Debian"
        },
        {
          "label": "rackhd-callback-notification-wait",
          "waitOn": { "install-ubuntu": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        },
        {
          "label": "update-netbox",
          "waitOn": { "rackhd-callback-notification-wait": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        },
        {
          "label": "ansible-provision",
          "waitOn": { "update-netbox": "succeeded" },
          "taskName": "/api/2.0/workflows/tasks/Task.Wait.Notification"
        }
      ]
    }
  ]
}
